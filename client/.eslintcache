[{"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\index.js":"1","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\App.js":"2","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\reportWebVitals.js":"3","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\myProjects.js":"4","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\home.js":"5","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\login.js":"6","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\register.js":"7","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\about.js":"8","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\providers\\UserProvider.jsx":"9","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Navbar\\index.js":"10","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Login\\SignIn.js":"11","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\CardSection\\CardSection.js":"12","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Register\\SignUp.js":"13","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\firebase.js":"14","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\ProjectsContainer\\index.js":"15","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\HelloFlashGrid\\index.js":"16","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Card\\Card.js":"17","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\API.js":"18","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Column\\index.js":"19","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\RenderForm\\index.js":"20","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Modal\\index.js":"21","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Jumbotron\\index.js":"22","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Sidebar\\index.js":"23","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\TaskFormButton\\index.js":"24","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\ProjectForm\\index.js":"25","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Jumbotron2\\index.js":"26"},{"size":565,"mtime":1614814912715,"results":"27","hashOfConfig":"28"},{"size":1098,"mtime":1614814912634,"results":"29","hashOfConfig":"28"},{"size":397,"mtime":1614814912719,"results":"30","hashOfConfig":"28"},{"size":533,"mtime":1614814912717,"results":"31","hashOfConfig":"28"},{"size":355,"mtime":1614814912716,"results":"32","hashOfConfig":"28"},{"size":329,"mtime":1614814912717,"results":"33","hashOfConfig":"28"},{"size":275,"mtime":1614814912718,"results":"34","hashOfConfig":"28"},{"size":521,"mtime":1614819547916,"results":"35","hashOfConfig":"28"},{"size":749,"mtime":1614814912719,"results":"36","hashOfConfig":"28"},{"size":3004,"mtime":1614814912697,"results":"37","hashOfConfig":"28"},{"size":3147,"mtime":1614814912696,"results":"38","hashOfConfig":"28"},{"size":1645,"mtime":1614821521007,"results":"39","hashOfConfig":"28"},{"size":3802,"mtime":1614814912703,"results":"40","hashOfConfig":"28"},{"size":1675,"mtime":1614814912720,"results":"41","hashOfConfig":"28"},{"size":15957,"mtime":1614814912701,"results":"42","hashOfConfig":"28"},{"size":709,"mtime":1614814912693,"results":"43","hashOfConfig":"28"},{"size":740,"mtime":1614814912635,"results":"44","hashOfConfig":"28"},{"size":753,"mtime":1614816710031,"results":"45","hashOfConfig":"28"},{"size":407,"mtime":1614814912637,"results":"46","hashOfConfig":"28"},{"size":2222,"mtime":1614814912704,"results":"47","hashOfConfig":"28"},{"size":2422,"mtime":1614814912697,"results":"48","hashOfConfig":"28"},{"size":326,"mtime":1614814912694,"results":"49","hashOfConfig":"28"},{"size":1478,"mtime":1614816247197,"results":"50","hashOfConfig":"28"},{"size":196,"mtime":1614814912706,"results":"51","hashOfConfig":"28"},{"size":1431,"mtime":1614814912699,"results":"52","hashOfConfig":"28"},{"size":315,"mtime":1614821189069,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1evslqw",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\index.js",[],["112","113"],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\App.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\reportWebVitals.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\myProjects.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\home.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\login.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\register.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\about.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\providers\\UserProvider.jsx",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Navbar\\index.js",["114","115"],"import React, {useEffect, useState, useContext }from \"react\";\r\nimport \"./styles.css\";\r\nimport { Link } from \"react-router-dom\"\r\nimport {UserContext} from '../../providers/UserProvider'\r\nimport  {signOut } from \"../../utils/firebase\"\r\n\r\nfunction Nav() {\r\n\r\n    // const [signedInUser, setSignedInUser] = useState(!!localStorage.getItem('signedInUser'));\r\n    const user = useContext(UserContext)\r\n    \r\n   \r\n    console.log(user)\r\n    // useEffect(() => {\r\n    //     getUser()\r\n    // }, [signedInUser]);\r\n\r\n\r\n    function getUser () {\r\n        if (user != null) {\r\n            return(\r\n                <>\r\n                <div className=\"col\">\r\n                    <a className=\"navbar-brand\" href=\"/projects\">\r\n                    {user.email}\r\n                    </a>\r\n                </div>\r\n\r\n                <div className=\"col\">\r\n                <div \r\n                onClick={() => {\r\n                    signOut();\r\n                    // setSignedInUser()\r\n                    // getUser()\r\n                }}\r\n                className=\"navbar-brand\" href=\"/projects\">\r\n                    <Link\r\n                    onClick={() => {alert(\"you logged out\")\r\n                signOut();\r\n                }}\r\n                    \r\n                    className=\"navbar-brand\" to=\"/\">\r\n                    Log Out\r\n                    </Link>\r\n                    \r\n                    \r\n                \r\n                    \r\n                </div>\r\n                </div>\r\n            </>\r\n            )\r\n        } else {\r\n            return(\r\n                <div className=\"col\">\r\n                <a className=\"navbar-brand\" href=\"/login\">\r\n                    Log In\r\n                </a>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark nav-color\">\r\n            <div className=\"container\">\r\n                <a href=\"/\"><img src=\"flashgrid-logo-white.png\" id='logo' alt=\"flash grid logo in white\"></img></a>\r\n                <div className='navcol'>\r\n                    <a className=\"navbar-brand\" href=\"/\">\r\n                        Home\r\n                    </a>\r\n                </div>\r\n                <div className='navcol'>\r\n                    <a className=\"navbar-brand\" href=\"/about\">\r\n                        About\r\n                    </a>\r\n                </div>\r\n                <div className='navcol'>\r\n                    <a className=\"navbar-brand\" href=\"/projects\">\r\n                        My Projects\r\n                    </a>\r\n                </div>\r\n                <div className='navcol'>\r\n                    <a className=\"navbar-brand\" href=\"/register\">\r\n                        Sign Up\r\n                    </a>\r\n                </div>\r\n\r\n                \r\n                \r\n                    {getUser()}\r\n\r\n                        \r\n                    \r\n                \r\n            </div>\r\n                \r\n\r\n         \r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Login\\SignIn.js",["116","117"],"import React, {useState, useEffect} from \"react\";\r\nimport \"./styles.css\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth } from \"../../utils/firebase\";\r\nimport { FiArrowRightCircle } from 'react-icons/fi';\r\nimport { Col, Row, Container } from 'react-bootstrap'\r\n\r\nconst SignIn = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n      console.log(`user is signed in as ${email}`);\r\n      localStorage.setItem('signedInUser', email);\r\n    }, [email]);\r\n    \r\n    const signInWithEmailAndPasswordHandler = \r\n            (event,email, password) => {\r\n                event.preventDefault();\r\n                auth.signInWithEmailAndPassword(email, password).then(() => history.push('/projects')).catch(error => {\r\n                  setError(\"Error signing in with password and email!\");\r\n                  console.error(\"Error signing in with password and email\", error);\r\n                });\r\n    };\r\n\r\n    const onChangeHandler = (event) => {\r\n        const {name, value} = event.currentTarget;\r\n\r\n        if(name === 'userEmail') {\r\n            setEmail(value);\r\n        }\r\n        else if(name === 'userPassword'){\r\n          setPassword(value);\r\n        }\r\n    };\r\nreturn (\r\n  <Container>\r\n  <div className='spacer'></div>\r\n  <br></br>\r\n  <br></br>\r\n    <div className=\"mt-8\" id='signin'>\r\n      <h1 className=\"text-3xl mb-2 text-center font-bold\" id='signIn-text'>Sign In</h1>\r\n      {/* <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\"> */}\r\n        {error !== null && <div className = \"py-4 bg-red-600 w-full text-white text-center mb-3\">{error}</div>}\r\n        <form className=\"\">\r\n          <input\r\n            type=\"email\"\r\n            className=\"input my-1 p-1 w-full\"\r\n            name=\"userEmail\"\r\n            value = {email}\r\n            placeholder=\"Your Email\"\r\n            id=\"userEmail\"\r\n            onChange = {(event) => onChangeHandler(event)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className=\"input mt-1 mb-3 p-1 w-full\"\r\n            name=\"userPassword\"\r\n            value = {password}\r\n            placeholder=\"Your Password\"\r\n            id=\"userPassword\"\r\n            onChange = {(event) => onChangeHandler(event)}\r\n          />\r\n          <button type=\"button\" class=\"btn btn-light btn-lg btn-block\" id='signInBtn' onClick = {(event) => {signInWithEmailAndPasswordHandler(event, email, password)}} className=\"text-blue-500 hover:text-blue-600\">Sign In <FiArrowRightCircle/></button>\r\n        <br></br>\r\n        </form>\r\n        <p className=\"text-center my-3 sign-or-pass\" id='dontMessage'>\r\n          Don't have an account?{\" \"}\r\n          <Link to=\"signUp\" className=\"sign-or-pass noAccBtn\">\r\n            Sign up \r\n          </Link>{\" \"}\r\n          <br />{\" \"}\r\n          <Link to = \"passwordReset\" className=\"sign-or-pass noAccBtn\">\r\n            Forgot Password?\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </Container>\r\n);\r\n\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\CardSection\\CardSection.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Register\\SignUp.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\firebase.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\ProjectsContainer\\index.js",["118","119"],"/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./style.css\";\r\nimport Column from \"../Column\";\r\nimport API from \"../../utils/API\";\r\nimport ModalForm from \"../Modal\";\r\nimport RenderForm from \"../RenderForm\";\r\nimport TaskFormButton from \"../TaskFormButton\";\r\nimport ProjectForm from \"../ProjectForm\";\r\nimport {UserContext} from '../../providers/UserProvider'\r\n\r\n\r\nfunction ProjectsContainer(props) {\r\n  const [user, setUser] = useState({})\r\n  const [projectNameList, setProjectNameList] = useState([]);\r\n  const [projects, setProjects] = useState([]); // SETS PROJECTS AFTER FILTER BY USERNAME\r\n  const [userProjects, setUserProjects] = useState([]); // SETS PROJECT LIST PRIOR TO FILTER FROM USER PROJECTS\r\n  const [currentProject, setCurrentProject] = useState([]);\r\n  const [taskForm, setTaskForm] = useState();\r\n  const [taskFormBoolean, setTaskFormBoolean] = useState(false); // USE TO DECIDE TO RENDER THE FORM OR BUTTON\r\n  const [clickedProject, setClickedProject] = useState(false); // USE TO DECIDE TO RENDER THE FORM OR BUTTON\r\n  const [formState, setFormState] = useState({}); // USE TO COLLECT TASK FORM INPUT VALUES\r\n  const [projectForm, setProjectForm] = useState({}) // USE TO COLLECT PROJECT FORM INPUT VALUES\r\n  const [active, setActive] = useState(false) //USE FOR SETTING ACTIVE CLASS\r\n\r\n  const userPerson = useContext(UserContext)\r\n\r\n  const signedInUser = userPerson ? userPerson.email : \"billy\"\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    loadProjects(); // ON LOAD OF PAGE API CALL TO GET ALL PROJECTS WILL BE CALLED\r\n    console.log(\"The user \" + signedInUser + \" is loggined in...\")\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    filterProjectsUserName(); // IF userProjects IS CHANGED \r\n\r\n  }, [userProjects]);\r\n\r\n  // sets the project name list when the projects changes\r\n  useEffect(() => {\r\n    const NameList = projects.map(item => {\r\n      return (\r\n        item.projectName\r\n      )\r\n    });\r\n    setUser({ userName: signedInUser })\r\n    setProjectNameList([...new Set(NameList)]);\r\n  }, [projects])\r\n  \r\n  \r\n  const loadProjects = () => { // LOADS ALL PROJECTS FROM THE API\r\n    API.getProjects().then(res => setUserProjects(res.data));\r\n  };\r\n\r\n  const filterProjectsUserName = () => {\r\n    console.log(user.userName)\r\n    const filteredUserProjects = userProjects.filter(project => user.userName === project.userName)\r\n    setProjects(filteredUserProjects)\r\n  }\r\n\r\n  \r\n  function findProject(e, item) { // FILTERS ALL TASKS WITH THE CLICK ON PROJECT NAME\r\n    setTaskFormBoolean(false)\r\n    setClickedProject(true);\r\n    const foundProject = projects.filter(project => item === project.projectName)\r\n    setCurrentProject(foundProject)\r\n\r\n  }\r\n\r\n  \r\n\r\n  const data = [\r\n    {\r\n      userName: \"playerthomasm6@gmail.com\",\r\n      projectName: \"Flash Grid\",\r\n      projectDescription:\r\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n      taskName: \"Assign tasks\",\r\n      taskDescription: \"Assign tasks to each team member\",\r\n      taskAssigne: \"Thomas\",\r\n      taskDueDate: \"02/11/2021\",\r\n      taskComplete: false\r\n    },\r\n    {\r\n      userName: \"playerthomasm6@gmail.com\",\r\n      projectName: \"Flash Grid\",\r\n      projectDescription:\r\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n      taskName: \"Create project page\",\r\n      taskDescription: \"write code to render information on the project page\",\r\n      taskAssigne: \"Thomas\",\r\n      taskDueDate: \"02/28/2021\",\r\n      taskComplete: false\r\n    },\r\n    {\r\n      userName: \"playerthomasm6@gmail.com\",\r\n      projectName: \"Flash Grid\",\r\n      projectDescription:\r\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n      taskName: \"Project Page CSS\",\r\n      taskDescription: \"Utilize CSS to format the project page\",\r\n      taskAssigne: \"John\",\r\n      taskDueDate: \"02/28/2021\",\r\n      taskComplete: false\r\n    },\r\n    {\r\n      userName: \"playerthomasm6@gmail.com\",\r\n      projectName: \"Flash Grid\",\r\n      projectDescription:\r\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n      taskName: \"Assign tasks\",\r\n      taskDescription: \"Assign tasks to each team member\",\r\n      taskAssigne: \"Thomas\",\r\n      taskDueDate: \"02/11/2021\",\r\n      taskComplete: false\r\n    },\r\n    {\r\n      userName: \"mathewHarris@gmail.com\",\r\n      projectName: \"Radical Gamez\",\r\n      projectDescription:\r\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n      taskName: \"Assign tasks\",\r\n      taskDescription: \"Assign tasks to each team member\",\r\n      taskAssigne: \"Thomas\",\r\n      taskDueDate: \"02/11/2021\",\r\n      taskComplete: false\r\n    },\r\n    {\r\n      userName: \"playerthomasm6@gmail.com\",\r\n      projectName: \"Tipster\",\r\n      projectDescription:\r\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n      taskName: \"Assign tasks\",\r\n      taskDescription: \"Assign tasks to each team member\",\r\n      taskAssigne: \"Thomas\",\r\n      taskDueDate: \"02/11/2021\",\r\n      taskComplete: false\r\n    },\r\n    {\r\n      userName: \"playerthomasm6@gmail.com\",\r\n      projectName: \"Tipster\",\r\n      projectDescription:\r\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n      taskName: \"Assign tasks\",\r\n      taskDescription: \"Assign tasks to each team member\",\r\n      taskAssigne: \"Thomas\",\r\n      taskDueDate: \"02/11/2021\",\r\n      taskComplete: false\r\n    },\r\n    {\r\n      userName: \"playerthomasm6@gmail.com\",\r\n      projectName: \"Other Project\",\r\n      projectDescription:\r\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n      taskName: \"Assign tasks\",\r\n      taskDescription: \"Assign tasks to each team member\",\r\n      taskAssigne: \"Thomas\",\r\n      taskDueDate: \"02/11/2021\",\r\n      taskComplete: false\r\n    },\r\n    {\r\n      userName: \"playerthomasm6@gmail.com\",\r\n      projectName: \"Final Project\",\r\n      projectDescription:\r\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n      taskName: \"Assign tasks\",\r\n      taskDescription: \"Assign tasks to each team member\",\r\n      taskAssigne: \"Thomas\",\r\n      taskDueDate: \"02/11/2021\",\r\n      taskComplete: false\r\n    }\r\n  ];\r\n\r\n  \r\n\r\n  // function handleInputChange(event) {\r\n  //     const { name, value } = event.target;\r\n  //     setFormObject({...formObject, [name]: value})\r\n  //   };\r\n\r\n\r\n\r\n  // =============================================================================================================\r\n  // |         CRUD FUNCTIONS        |      DELETE      |     CREATE      |     EDIT      |\r\n  // =============================================================================================================\r\n\r\n  function deleteThatTask(id) { // DELETE TASK BY ID\r\n    console.log(id);\r\n    API.deleteTask(id)\r\n      .then(res => {\r\n        console.log('fire1')\r\n        loadProjects()\r\n      })\r\n      .then(() => {\r\n        console.log('fire2')\r\n        console.log(currentProject[0].projectName)\r\n        findProject(\"bullshit\", currentProject[0].projectName)\r\n      })\r\n      .then(() => {\r\n        const newTasks = currentProject.filter((task) => task._id !== id);\r\n        setCurrentProject(newTasks);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleFormInput(event) { // HANDLES TASK FORM INPUTS\r\n    const { name, value } = event.target\r\n\r\n    setFormState({ ...formState, [name]: value })\r\n  }\r\n\r\n  const submitNewTask = (e) => { // CREATE NEW TASK\r\n    e.preventDefault();\r\n    console.log(\"New Task Created\");\r\n\r\n    console.log(formState)\r\n\r\n    const task = {\r\n      userName: currentProject[0].userName,\r\n      projectName: currentProject[0].projectName,\r\n      projectDescription: currentProject[0].projectDescription,\r\n      taskName: formState.taskName,\r\n      taskDescription: formState.taskDescription,\r\n      taskAssigne: formState.taskAssigne,\r\n      taskDueDate: formState.taskDueDate,\r\n      taskComplete: false\r\n    }\r\n    API.saveTask(task)\r\n      .then(res => loadProjects())\r\n      .then(() => {setCurrentProject([...currentProject, task]);})\r\n      .then(() => setTaskFormBoolean(false))\r\n      .then(() => setFormState({}))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n\r\n  function handleProjectFormInput(event) { // HANDLES TASK FORM INPUTS\r\n    const { name, value } = event.target\r\n\r\n    setProjectForm({ ...projectForm, [name]: value })\r\n    console.log(projectForm)\r\n  }\r\n\r\n\r\n  const createNewProject = () => { // CREATE NEW PROJECT\r\n    console.log(\"Project Created!!... unless it wasn't?  No?  Ok I will look into it\");\r\n    const newProject = {\r\n      // userName: user.userName,\r\n      userName: user.userName,\r\n      projectName: projectForm.projectName,\r\n      projectDescription: projectForm.projectDescription,\r\n      taskName: \"Create tasks for your new project!\",\r\n      taskDescription: \"Describe your tasks!\",\r\n      taskAssigne: \"Assign someone the task\",\r\n      taskDueDate: \"2021-05-15T04:00:00.000Z\",\r\n      taskComplete: false\r\n    }\r\n    API.saveTask(newProject)\r\n      .then(res => loadProjects())\r\n      // .then(() => {setCurrentProject([...currentProject, newProject]);})\r\n      .then(() => setTaskFormBoolean(false))\r\n      .then(() => setFormState({}))\r\n      .catch(err => console.log(err));\r\n\r\n  }\r\n\r\n// ==================================================================================================================\r\n\r\n\r\n\r\n\r\n  function handleNow(event) {\r\n    const value = event.target.getAttribute(\"value\");\r\n    const name = event.target.getAttribute(\"name\");\r\n\r\n    console.log(value + name);\r\n    setCurrentProject({ currentProject: value });\r\n    console.log(currentProject);\r\n  }\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [editData, setEditData] = useState({});\r\n  \r\n  const handleClose = () => setShow(false);\r\n  const handleEditBtn = eData => {\r\n    setShow(true);\r\n    setEditData(eData);\r\n  };\r\n\r\n  const loadTaskForm = () => {\r\n    console.log(\"it worked\")\r\n    setTaskFormBoolean(true)\r\n  }\r\n\r\n  \r\n\r\n  function handleFormInput(event) {\r\n    const { name, value } = event.target\r\n\r\n    setFormState({ ...formState, [name]: value })\r\n  }\r\n\r\n\r\n  \r\n  const getForm = () => { // checks for boolean state and renders either form or button which changes the boolean state to render the form\r\n    \r\n    if ((taskFormBoolean) && (clickedProject)) {\r\n      return <RenderForm\r\n        formState={formState}\r\n        submitNewTask={(e) => submitNewTask(e)}\r\n        handleFormInput={(e) => handleFormInput(e)}\r\n      />\r\n    } else if ((!taskFormBoolean) && (clickedProject)) {\r\n      return <TaskFormButton\r\n        loadTaskForm={() => loadTaskForm()}\r\n      />\r\n    }\r\n  }\r\n\r\n  const getProjectForm = () => { // checks for boolean state and renders either form or button which changes the boolean state to render the form\r\n    if (!taskFormBoolean) {\r\n      return <ProjectForm\r\n        projectForm={projectForm}\r\n        createNewProject={(e) => createNewProject(e)}\r\n        handleProjectFormInput={(e) => handleProjectFormInput(e)}\r\n      />\r\n    } else {\r\n      return <TaskFormButton\r\n        loadTaskForm={() => loadTaskForm()}\r\n      />\r\n    }\r\n  }\r\n\r\n  const makeActive = (item) => {\r\n    if(item === item) {\r\n      return \"active pointer\"\r\n    } else {\r\n      return \"pointer\"\r\n    }\r\n  }\r\n\r\n\r\n// this function runs when click Sav on modal\r\n function editDataSave(){\r\n     console.log(\"worked edit\") \r\n     console.log(editData._id)\r\n     let id = editData._id\r\n    API.editTask(id, editData)\r\n    .then(res => {\r\n      console.log(res)\r\n      handleClose() \r\n      })\r\n      }\r\n\r\n// This function sets new data to the state. \r\n  function editChangeData(event){\r\n    const newTarget = event.target.name\r\n    const newValue = event.target.value\r\n     \r\n      console.log(event.target.name)\r\n      console.log(event.target.value)\r\n      \r\n      const data= {...editData, [`${newTarget}`]:newValue}\r\n      setEditData(data)\r\n      console.log(editData)\r\n     }\r\n\r\n\r\n\r\n// ===================================================================================================\r\n// RETURN | RENDER  |\r\n// ===================================================================================================\r\n  return ( \r\n    <>\r\n      <ModalForm show={show} handleClose={handleClose} editData={editData} editDataSave={editDataSave} editChangeData={editChangeData} />\r\n      <div className=\"container-fluid space-out\">\r\n        <h6>Current User: {signedInUser}</h6>\r\n        {/* <button onClick={() => createNewProject()}>Create Project</button> */}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-2\">\r\n          <table class=\"table striped bordered hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\"><h4 className=\"align-center\">Projects</h4></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n\r\n            {\r\n            \r\n            projectNameList.map(item => (\r\n              <tr>\r\n              <td\r\n                className=\"pointer\"\r\n                key={item + \"1\"}\r\n                value={item}\r\n                // name={item.userName}\r\n                onClick={event => {findProject(event, item)}}\r\n              > <h5 \r\n              id={item}\r\n              className=\"align-center\">{item}</h5>\r\n                \r\n              </td>\r\n              \r\n              </tr>\r\n            ))}\r\n                \r\n            </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"col-sm-10\">\r\n            <table class=\"table striped bordered hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\"><h4 className=\"align-center\">Task Name</h4></th>\r\n                  <th scope=\"col\"><h4 className=\"align-center\">Description</h4></th>\r\n                  <th scope=\"col\"><h4 className=\"align-center\">Assigned Personel</h4></th>\r\n                  <th scope=\"col\"><h4 className=\"align-center\">Due Date</h4></th>\r\n                  <th scope=\"col\"><h4 className=\"align-center\">Manage</h4></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentProject.map(item => (\r\n                  <tr\r\n                  key={item._id}\r\n                  >\r\n                    <td \r\n                    id={item._id} \r\n                    name=\"taskName\">\r\n                      <h6 className=\"align-center\">{item.taskName}</h6>\r\n                      \r\n                    </td>\r\n\r\n                    <td> \r\n                      <p className=\"align-center\">\r\n                      {item.taskDescription}\r\n                      </p>\r\n                    </td>\r\n\r\n                    <td><h6 className=\"align-center\">{item.taskAssigne}</h6></td>\r\n\r\n                    <td>\r\n                      <h6 className=\"align-center\">{item.taskDueDate}</h6>{\" \"}\r\n                      \r\n                    </td>\r\n\r\n                    <td>\r\n                      <div className=\"align-center\">\r\n                    <button onClick={() => handleEditBtn(item)}>Edit</button>\r\n                    <button className=\"delete-button align-center\" value={item._id} onClick={e => deleteThatTask(e.target.value)}>[X]</button>\r\n                    </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n\r\n                \r\n              </tbody>\r\n            </table>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">{getForm()}</div>\r\n              \r\n              </div>\r\n          </div>\r\n        </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">\r\n              \r\n              {getProjectForm()}\r\n              </div>\r\n            </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProjectsContainer;\r\n","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\HelloFlashGrid\\index.js",["120","121"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport Jumbotron from \"../Jumbotron\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\nfunction HelloFlashGrid() {\r\n\r\n\r\n    return (\r\n        <body>\r\n\r\n\r\n            <div id=\"back\" className=\"container-fluid space-out\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-sm-8\">\r\n                        <Jumbotron />\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-4\" id='sidebar'>\r\n                        <Sidebar />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </body>\r\n    );\r\n}\r\n\r\nexport default HelloFlashGrid;\r\n","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Card\\Card.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\API.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Column\\index.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\RenderForm\\index.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Modal\\index.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Jumbotron\\index.js",["122"],"import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction Jumbotron() {\r\n  return (<div>\r\n    <div className=\"jumbotron b\">\r\n      <h1> welcome to</h1>\r\n      <img id=\"image1\" src=\"flashgrid.png\"></img>\r\n      <h3>where projects are made in a flash</h3>\r\n    </div>\r\n  </div>\r\n  \r\n\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Sidebar\\index.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\TaskFormButton\\index.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\ProjectForm\\index.js",[],"C:\\Users\\John Rogers\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Jumbotron2\\index.js",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"132","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":35},{"ruleId":"128","severity":1,"message":"133","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":13},{"ruleId":"128","severity":1,"message":"134","line":6,"column":15,"nodeType":"130","messageId":"131","endLine":6,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":302,"column":12,"nodeType":"130","messageId":"137","endLine":302,"endColumn":27},{"ruleId":"138","severity":1,"message":"139","line":340,"column":8,"nodeType":"140","messageId":"141","endLine":340,"endColumn":21},{"ruleId":"128","severity":1,"message":"134","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":13},{"ruleId":"128","severity":1,"message":"133","line":5,"column":15,"nodeType":"130","messageId":"131","endLine":5,"endColumn":18},{"ruleId":"142","severity":1,"message":"143","line":8,"column":7,"nodeType":"144","endLine":8,"endColumn":44},{"ruleId":"142","severity":1,"message":"143","line":8,"column":7,"nodeType":"144","endLine":8,"endColumn":44},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","no-redeclare","'handleFormInput' is already defined.","redeclared","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]