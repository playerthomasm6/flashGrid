[{"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/index.js":"1","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/App.js":"2","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/reportWebVitals.js":"3","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/home.js":"4","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/myProjects.js":"5","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/login.js":"6","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/register.js":"7","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/about.js":"8","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/providers/UserProvider.jsx":"9","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Register/SignUp.js":"10","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Login/SignIn.js":"11","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Navbar/index.js":"12","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Jumbotron/index.js":"13","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/utils/firebase.js":"14","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/CardSection/CardSection.js":"15","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/ProjectsContainer/index.js":"16","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/HelloFlashGrid/index.js":"17","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Card/Card.js":"18","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/utils/API.js":"19","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/RenderForm/index.js":"20","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Column/index.js":"21","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Modal/index.js":"22","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/TaskFormButton/index.js":"23","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/ProjectForm/index.js":"24","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Sidebar/index.js":"25"},{"size":547,"mtime":1613699149558,"results":"26","hashOfConfig":"27"},{"size":1055,"mtime":1614807575337,"results":"28","hashOfConfig":"27"},{"size":385,"mtime":1613699149561,"results":"29","hashOfConfig":"27"},{"size":337,"mtime":1613699331759,"results":"30","hashOfConfig":"27"},{"size":513,"mtime":1614807575505,"results":"31","hashOfConfig":"27"},{"size":310,"mtime":1614730380648,"results":"32","hashOfConfig":"27"},{"size":262,"mtime":1614730421380,"results":"33","hashOfConfig":"27"},{"size":500,"mtime":1614739650185,"results":"34","hashOfConfig":"27"},{"size":720,"mtime":1613699331760,"results":"35","hashOfConfig":"27"},{"size":3683,"mtime":1614728124842,"results":"36","hashOfConfig":"27"},{"size":3063,"mtime":1614735425855,"results":"37","hashOfConfig":"27"},{"size":2900,"mtime":1614807932053,"results":"38","hashOfConfig":"27"},{"size":309,"mtime":1614807575491,"results":"39","hashOfConfig":"27"},{"size":1589,"mtime":1614737448101,"results":"40","hashOfConfig":"27"},{"size":1496,"mtime":1614739650178,"results":"41","hashOfConfig":"27"},{"size":15474,"mtime":1614808216590,"results":"42","hashOfConfig":"27"},{"size":673,"mtime":1614807575490,"results":"43","hashOfConfig":"27"},{"size":709,"mtime":1614739650176,"results":"44","hashOfConfig":"27"},{"size":724,"mtime":1614739650186,"results":"45","hashOfConfig":"27"},{"size":2177,"mtime":1614728124842,"results":"46","hashOfConfig":"27"},{"size":388,"mtime":1614450286075,"results":"47","hashOfConfig":"27"},{"size":2352,"mtime":1614728124840,"results":"48","hashOfConfig":"27"},{"size":187,"mtime":1614728124843,"results":"49","hashOfConfig":"27"},{"size":1400,"mtime":1614807575497,"results":"50","hashOfConfig":"27"},{"size":1425,"mtime":1614739650183,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"8ygfeh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/index.js",[],["107","108"],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/App.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/reportWebVitals.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/home.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/myProjects.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/login.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/register.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/about.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/providers/UserProvider.jsx",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Register/SignUp.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Login/SignIn.js",["109","110"],"import React, {useState, useEffect} from \"react\";\nimport \"./styles.css\"\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth } from \"../../utils/firebase\";\nimport { FiArrowRightCircle } from 'react-icons/fi';\nimport { Col, Row, Container } from 'react-bootstrap'\n\nconst SignIn = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n    const history = useHistory()\n\n    useEffect(() => {\n      console.log(`user is signed in as ${email}`);\n      localStorage.setItem('signedInUser', email);\n    }, [email]);\n    \n    const signInWithEmailAndPasswordHandler = \n            (event,email, password) => {\n                event.preventDefault();\n                auth.signInWithEmailAndPassword(email, password).then(() => history.push('/projects')).catch(error => {\n                  setError(\"Error signing in with password and email!\");\n                  console.error(\"Error signing in with password and email\", error);\n                });\n    };\n\n    const onChangeHandler = (event) => {\n        const {name, value} = event.currentTarget;\n\n        if(name === 'userEmail') {\n            setEmail(value);\n        }\n        else if(name === 'userPassword'){\n          setPassword(value);\n        }\n    };\nreturn (\n  <Container>\n  <div className='spacer'></div>\n  <br></br>\n  <br></br>\n    <div className=\"mt-8\" id='signin'>\n      <h1 className=\"text-3xl mb-2 text-center font-bold\" id='signIn-text'>Sign In</h1>\n      {/* <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\"> */}\n        {error !== null && <div className = \"py-4 bg-red-600 w-full text-white text-center mb-3\">{error}</div>}\n        <form className=\"\">\n          <input\n            type=\"email\"\n            className=\"input my-1 p-1 w-full\"\n            name=\"userEmail\"\n            value = {email}\n            placeholder=\"Your Email\"\n            id=\"userEmail\"\n            onChange = {(event) => onChangeHandler(event)}\n          />\n          <input\n            type=\"password\"\n            className=\"input mt-1 mb-3 p-1 w-full\"\n            name=\"userPassword\"\n            value = {password}\n            placeholder=\"Your Password\"\n            id=\"userPassword\"\n            onChange = {(event) => onChangeHandler(event)}\n          />\n          <button type=\"button\" class=\"btn btn-light btn-lg btn-block\" id='signInBtn' onClick = {(event) => {signInWithEmailAndPasswordHandler(event, email, password)}} className=\"text-blue-500 hover:text-blue-600\">Sign In <FiArrowRightCircle/></button>\n        <br></br>\n        </form>\n        <p className=\"text-center my-3 sign-or-pass\" id='dontMessage'>\n          Don't have an account?{\" \"}\n          <Link to=\"signUp\" className=\"sign-or-pass noAccBtn\">\n            Sign up \n          </Link>{\" \"}\n          <br />{\" \"}\n          <Link to = \"passwordReset\" className=\"sign-or-pass noAccBtn\">\n            Forgot Password?\n          </Link>\n        </p>\n      </div>\n    </Container>\n);\n\n}\n\nexport default SignIn;","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Navbar/index.js",["111","112"],"import React, {useEffect, useState, useContext }from \"react\";\nimport \"./styles.css\";\nimport { Link } from \"react-router-dom\"\nimport {UserContext} from '../../providers/UserProvider'\nimport  {signOut } from \"../../utils/firebase\"\n\nfunction Nav() {\n\n    // const [signedInUser, setSignedInUser] = useState(!!localStorage.getItem('signedInUser'));\n    const user = useContext(UserContext)\n    \n   \n    console.log(user)\n    // useEffect(() => {\n    //     getUser()\n    // }, [signedInUser]);\n\n\n    function getUser () {\n        if (user != null) {\n            return(\n                <>\n                <div className=\"col\">\n                    <a className=\"navbar-brand\" href=\"/projects\">\n                    {user.email}\n                    </a>\n                </div>\n\n                <div className=\"col\">\n                <div \n                onClick={() => {\n                    signOut();\n                    // setSignedInUser()\n                    // getUser()\n                }}\n                className=\"navbar-brand\" href=\"/projects\">\n                    <Link\n                    onClick={() => {alert(\"you logged out\")\n                signOut();\n                }}\n                    \n                    className=\"navbar-brand\" to=\"/\">\n                    Log Out\n                    </Link>\n                    \n                    \n                \n                    \n                </div>\n                </div>\n            </>\n            )\n        } else {\n            return(\n                <div className=\"col\">\n                <a className=\"navbar-brand\" href=\"/login\">\n                    Log In\n                </a>\n            </div>\n            )\n        }\n    }\n   \n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark nav-color\">\n            <div className=\"container\">\n                <a href=\"/\"><img src=\"flashgrid-logo-white.png\" id='logo' alt=\"flash grid logo in white\"></img></a>\n                <div className='navcol'>\n                    <a className=\"navbar-brand\" href=\"/\">\n                        Home\n                    </a>\n                </div>\n                <div className='navcol'>\n                    <a className=\"navbar-brand\" href=\"/about\">\n                        About\n                    </a>\n                </div>\n                <div className='navcol'>\n                    <a className=\"navbar-brand\" href=\"/projects\">\n                        My Projects\n                    </a>\n                </div>\n                <div className='navcol'>\n                    <a className=\"navbar-brand\" href=\"/register\">\n                        Sign Up\n                    </a>\n                </div>\n\n                \n                \n                    {getUser()}\n\n                        \n                    \n                \n            </div>\n                \n\n         \n        </nav>\n    );\n}\n\nexport default Nav;\n","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Jumbotron/index.js",["113","114"],"import React from \"react\";\nimport \"./styles.css\";\n\nfunction Jumbotron() {\n  return (<div>\n    <div className=\"jumbotron b\">\n      <h1> Welcome to</h1>\n      <img src=\"flashgrid.png\"></img>\n      <h4>where projects are made in a flash</h4>\n    </div>\n<img src=\"digital-marketing-meeting.jpg\"></img>\n  </div>\n  \n\n  );\n}\n\nexport default Jumbotron;\n","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/utils/firebase.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/CardSection/CardSection.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/ProjectsContainer/index.js",["115","116"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./style.css\";\nimport Column from \"../Column\";\nimport API from \"../../utils/API\";\nimport ModalForm from \"../Modal\";\nimport RenderForm from \"../RenderForm\";\nimport TaskFormButton from \"../TaskFormButton\";\nimport ProjectForm from \"../ProjectForm\";\nimport {UserContext} from '../../providers/UserProvider'\n\n\nfunction ProjectsContainer(props) {\n  const [user, setUser] = useState({})\n  const [projectNameList, setProjectNameList] = useState([]);\n  const [projects, setProjects] = useState([]); // SETS PROJECTS AFTER FILTER BY USERNAME\n  const [userProjects, setUserProjects] = useState([]); // SETS PROJECT LIST PRIOR TO FILTER FROM USER PROJECTS\n  const [currentProject, setCurrentProject] = useState([]);\n  const [taskForm, setTaskForm] = useState();\n  const [taskFormBoolean, setTaskFormBoolean] = useState(false); // USE TO DECIDE TO RENDER THE FORM OR BUTTON\n  const [clickedProject, setClickedProject] = useState(false); // USE TO DECIDE TO RENDER THE FORM OR BUTTON\n  const [formState, setFormState] = useState({}); // USE TO COLLECT TASK FORM INPUT VALUES\n  const [projectForm, setProjectForm] = useState({}) // USE TO COLLECT PROJECT FORM INPUT VALUES\n  const [active, setActive] = useState(false) //USE FOR SETTING ACTIVE CLASS\n\n  const userPerson = useContext(UserContext)\n\n  const signedInUser = userPerson ? userPerson.email : \"billy\"\n\n\n  useEffect(() => {\n\n    loadProjects(); // ON LOAD OF PAGE API CALL TO GET ALL PROJECTS WILL BE CALLED\n    console.log(\"The user \" + signedInUser + \" is loggined in...\")\n  }, []);\n\n  useEffect(() => {\n\n    filterProjectsUserName(); // IF userProjects IS CHANGED \n\n  }, [userProjects]);\n\n  // sets the project name list when the projects changes\n  useEffect(() => {\n    const NameList = projects.map(item => {\n      return (\n        item.projectName\n      )\n    });\n    setUser({ userName: signedInUser })\n    setProjectNameList([...new Set(NameList)]);\n  }, [projects])\n  \n  \n  const loadProjects = () => { // LOADS ALL PROJECTS FROM THE API\n    API.getProjects().then(res => setUserProjects(res.data));\n  };\n\n  const filterProjectsUserName = () => {\n    console.log(user.userName)\n    const filteredUserProjects = userProjects.filter(project => user.userName === project.userName)\n    setProjects(filteredUserProjects)\n  }\n\n  \n  function findProject(e, item) { // FILTERS ALL TASKS WITH THE CLICK ON PROJECT NAME\n    setTaskFormBoolean(false)\n    setClickedProject(true);\n    const foundProject = projects.filter(project => item === project.projectName)\n    setCurrentProject(foundProject)\n\n  }\n\n  \n\n  const data = [\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Create project page\",\n      taskDescription: \"write code to render information on the project page\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/28/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Project Page CSS\",\n      taskDescription: \"Utilize CSS to format the project page\",\n      taskAssigne: \"John\",\n      taskDueDate: \"02/28/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"mathewHarris@gmail.com\",\n      projectName: \"Radical Gamez\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Tipster\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Tipster\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Other Project\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Final Project\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    }\n  ];\n\n  \n\n  // function handleInputChange(event) {\n  //     const { name, value } = event.target;\n  //     setFormObject({...formObject, [name]: value})\n  //   };\n\n\n\n  // =============================================================================================================\n  // |         CRUD FUNCTIONS        |      DELETE      |     CREATE      |     EDIT      |\n  // =============================================================================================================\n\n  function deleteThatTask(id) { // DELETE TASK BY ID\n    console.log(id);\n    API.deleteTask(id)\n      .then(res => {\n        console.log('fire1')\n        loadProjects()\n      })\n      .then(() => {\n        console.log('fire2')\n        console.log(currentProject[0].projectName)\n        findProject(\"bullshit\", currentProject[0].projectName)\n      })\n      .then(() => {\n        const newTasks = currentProject.filter((task) => task._id !== id);\n        setCurrentProject(newTasks);\n      })\n      .catch(err => console.log(err));\n  }\n\n  function handleFormInput(event) { // HANDLES TASK FORM INPUTS\n    const { name, value } = event.target\n\n    setFormState({ ...formState, [name]: value })\n  }\n\n  const submitNewTask = (e) => { // CREATE NEW TASK\n    e.preventDefault();\n    console.log(\"New Task Created\");\n\n    console.log(formState)\n\n    const task = {\n      userName: currentProject[0].userName,\n      projectName: currentProject[0].projectName,\n      projectDescription: currentProject[0].projectDescription,\n      taskName: formState.taskName,\n      taskDescription: formState.taskDescription,\n      taskAssigne: formState.taskAssigne,\n      taskDueDate: formState.taskDueDate,\n      taskComplete: false\n    }\n    API.saveTask(task)\n      .then(res => loadProjects())\n      .then(() => {setCurrentProject([...currentProject, task]);})\n      .then(() => setTaskFormBoolean(false))\n      .then(() => setFormState({}))\n      .catch(err => console.log(err));\n  }\n\n\n  function handleProjectFormInput(event) { // HANDLES TASK FORM INPUTS\n    const { name, value } = event.target\n\n    setProjectForm({ ...projectForm, [name]: value })\n    console.log(projectForm)\n  }\n\n\n  const createNewProject = () => { // CREATE NEW PROJECT\n    console.log(\"Project Created!!... unless it wasn't?  No?  Ok I will look into it\");\n    const newProject = {\n      // userName: user.userName,\n      userName: user.userName,\n      projectName: projectForm.projectName,\n      projectDescription: projectForm.projectDescription,\n      taskName: \"Create tasks for your new project!\",\n      taskDescription: \"Describe your tasks!\",\n      taskAssigne: \"Assign someone the task\",\n      taskDueDate: \"2021-05-15T04:00:00.000Z\",\n      taskComplete: false\n    }\n    API.saveTask(newProject)\n      .then(res => loadProjects())\n      // .then(() => {setCurrentProject([...currentProject, newProject]);})\n      .then(() => setTaskFormBoolean(false))\n      .then(() => setFormState({}))\n      .catch(err => console.log(err));\n\n  }\n\n// ==================================================================================================================\n\n\n\n\n  function handleNow(event) {\n    const value = event.target.getAttribute(\"value\");\n    const name = event.target.getAttribute(\"name\");\n\n    console.log(value + name);\n    setCurrentProject({ currentProject: value });\n    console.log(currentProject);\n  }\n\n  const [show, setShow] = useState(false);\n  const [editData, setEditData] = useState({});\n  \n  const handleClose = () => setShow(false);\n  const handleEditBtn = eData => {\n    setShow(true);\n    setEditData(eData);\n  };\n\n  const loadTaskForm = () => {\n    console.log(\"it worked\")\n    setTaskFormBoolean(true)\n  }\n\n  \n\n  function handleFormInput(event) {\n    const { name, value } = event.target\n\n    setFormState({ ...formState, [name]: value })\n  }\n\n\n  \n  const getForm = () => { // checks for boolean state and renders either form or button which changes the boolean state to render the form\n    \n    if ((taskFormBoolean) && (clickedProject)) {\n      return <RenderForm\n        formState={formState}\n        submitNewTask={(e) => submitNewTask(e)}\n        handleFormInput={(e) => handleFormInput(e)}\n      />\n    } else if ((!taskFormBoolean) && (clickedProject)) {\n      return <TaskFormButton\n        loadTaskForm={() => loadTaskForm()}\n      />\n    }\n  }\n\n  const getProjectForm = () => { // checks for boolean state and renders either form or button which changes the boolean state to render the form\n    if (!taskFormBoolean) {\n      return <ProjectForm\n        projectForm={projectForm}\n        createNewProject={(e) => createNewProject(e)}\n        handleProjectFormInput={(e) => handleProjectFormInput(e)}\n      />\n    } else {\n      return <TaskFormButton\n        loadTaskForm={() => loadTaskForm()}\n      />\n    }\n  }\n\n  const makeActive = (item) => {\n    if(item === item) {\n      return \"active pointer\"\n    } else {\n      return \"pointer\"\n    }\n  }\n\n\n// this function runs when click Sav on modal\n function editDataSave(){\n     console.log(\"worked edit\") \n     console.log(editData._id)\n     let id = editData._id\n    API.editTask(id, editData)\n    .then(res => {\n      console.log(res)\n      handleClose() \n      })\n      }\n\n// This function sets new data to the state. \n  function editChangeData(event){\n    const newTarget = event.target.name\n    const newValue = event.target.value\n     \n      console.log(event.target.name)\n      console.log(event.target.value)\n      \n      const data= {...editData, [`${newTarget}`]:newValue}\n      setEditData(data)\n      console.log(editData)\n     }\n\n\n\n// ===================================================================================================\n// RETURN | RENDER  |\n// ===================================================================================================\n  return ( \n    <>\n      <ModalForm show={show} handleClose={handleClose} editData={editData} editDataSave={editDataSave} editChangeData={editChangeData} />\n      <div className=\"container-fluid space-out\">\n        <h6>Current User: {signedInUser}</h6>\n        {/* <button onClick={() => createNewProject()}>Create Project</button> */}\n\n        <div className=\"row\">\n          <div className=\"col-sm-2\">\n          <table class=\"table striped bordered hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\"><h4 className=\"align-center\">Projects</h4></th>\n                </tr>\n              </thead>\n              <tbody>\n\n            {\n            \n            projectNameList.map(item => (\n              <tr>\n              <td\n                className=\"pointer\"\n                key={item + \"1\"}\n                value={item}\n                // name={item.userName}\n                onClick={event => {findProject(event, item)}}\n              > <h5 \n              id={item}\n              className=\"align-center\">{item}</h5>\n                \n              </td>\n              \n              </tr>\n            ))}\n                \n            </tbody>\n            </table>\n          </div>\n\n          <div className=\"col-sm-10\">\n            <table class=\"table striped bordered hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\"><h4 className=\"align-center\">Task Name</h4></th>\n                  <th scope=\"col\"><h4 className=\"align-center\">Description</h4></th>\n                  <th scope=\"col\"><h4 className=\"align-center\">Assigned Personel</h4></th>\n                  <th scope=\"col\"><h4 className=\"align-center\">Due Date</h4></th>\n                  <th scope=\"col\"><h4 className=\"align-center\">Manage</h4></th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentProject.map(item => (\n                  <tr\n                  key={item._id}\n                  >\n                    <td \n                    id={item._id} \n                    name=\"taskName\">\n                      <h6 className=\"align-center\">{item.taskName}</h6>\n                      \n                    </td>\n\n                    <td> \n                      <p className=\"align-center\">\n                      {item.taskDescription}\n                      </p>\n                    </td>\n\n                    <td><h6 className=\"align-center\">{item.taskAssigne}</h6></td>\n\n                    <td>\n                      <h6 className=\"align-center\">{item.taskDueDate}</h6>{\" \"}\n                      \n                    </td>\n\n                    <td>\n                      <div className=\"align-center\">\n                    <button onClick={() => handleEditBtn(item)}>Edit</button>\n                    <button className=\"delete-button align-center\" value={item._id} onClick={e => deleteThatTask(e.target.value)}>[X]</button>\n                    </div>\n                    </td>\n                  </tr>\n                ))}\n\n                \n              </tbody>\n            </table>\n            <div className=\"row\">\n              <div className=\"col-sm-12\">{getForm()}</div>\n              \n              </div>\n          </div>\n        </div>\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n              \n              {getProjectForm()}\n              </div>\n            </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProjectsContainer;\n","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/HelloFlashGrid/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Card/Card.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/utils/API.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/RenderForm/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Column/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Modal/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/TaskFormButton/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/ProjectForm/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Sidebar/index.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":13},{"ruleId":"121","severity":1,"message":"125","line":6,"column":15,"nodeType":"123","messageId":"124","endLine":6,"endColumn":18},{"ruleId":"121","severity":1,"message":"126","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"127","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":35},{"ruleId":"128","severity":1,"message":"129","line":8,"column":7,"nodeType":"130","endLine":8,"endColumn":32},{"ruleId":"128","severity":1,"message":"129","line":11,"column":1,"nodeType":"130","endLine":11,"endColumn":42},{"ruleId":"131","severity":1,"message":"132","line":302,"column":12,"nodeType":"123","messageId":"133","endLine":302,"endColumn":27},{"ruleId":"134","severity":1,"message":"135","line":340,"column":8,"nodeType":"136","messageId":"137","endLine":340,"endColumn":21},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-redeclare","'handleFormInput' is already defined.","redeclared","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","no-global-assign","no-unsafe-negation"]