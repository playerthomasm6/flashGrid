[{"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/index.js":"1","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/reportWebVitals.js":"2","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/App.js":"3","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/myProjects.js":"4","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/home.js":"5","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/Application.js":"6","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/about.js":"7","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/providers/UserProvider.jsx":"8","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/SignIn.js":"9","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/SignUp.js":"10","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/ProfilePage.js":"11","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/PasswordReset.js":"12","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Navbar/index.js":"13","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Jumbotron/index.js":"14","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Wrapper/index.js":"15","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/utils/firebase.js":"16","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/HelloFlashGrid/index.js":"17","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/ProjectsContainer/index.js":"18","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/utils/API.js":"19","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Sidebar/index.js":"20","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Column/index.js":"21","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Modal/index.js":"22","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/RenderForm/index.js":"23","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/TaskFormButton/index.js":"24"},{"size":547,"mtime":1613692992190,"results":"25","hashOfConfig":"26"},{"size":385,"mtime":1613692992195,"results":"27","hashOfConfig":"26"},{"size":834,"mtime":1614449494233,"results":"28","hashOfConfig":"26"},{"size":523,"mtime":1614449494235,"results":"29","hashOfConfig":"26"},{"size":337,"mtime":1613692992193,"results":"30","hashOfConfig":"26"},{"size":485,"mtime":1614439159751,"results":"31","hashOfConfig":"26"},{"size":350,"mtime":1613692992193,"results":"32","hashOfConfig":"26"},{"size":720,"mtime":1613692992194,"results":"33","hashOfConfig":"26"},{"size":2712,"mtime":1613692992192,"results":"34","hashOfConfig":"26"},{"size":3414,"mtime":1613692992192,"results":"35","hashOfConfig":"26"},{"size":965,"mtime":1613692992192,"results":"36","hashOfConfig":"26"},{"size":2217,"mtime":1613692992191,"results":"37","hashOfConfig":"26"},{"size":1222,"mtime":1614302879718,"results":"38","hashOfConfig":"26"},{"size":345,"mtime":1614443860401,"results":"39","hashOfConfig":"26"},{"size":1177,"mtime":1613692992189,"results":"40","hashOfConfig":"26"},{"size":1353,"mtime":1613692992195,"results":"41","hashOfConfig":"26"},{"size":747,"mtime":1613692992186,"results":"42","hashOfConfig":"26"},{"size":10048,"mtime":1614449494234,"results":"43","hashOfConfig":"26"},{"size":634,"mtime":1614127264597,"results":"44","hashOfConfig":"26"},{"size":598,"mtime":1613692992188,"results":"45","hashOfConfig":"26"},{"size":388,"mtime":1614127264574,"results":"46","hashOfConfig":"26"},{"size":2119,"mtime":1614449494234,"results":"47","hashOfConfig":"26"},{"size":2170,"mtime":1614449494235,"results":"48","hashOfConfig":"26"},{"size":236,"mtime":1614439638641,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"540tvx",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/index.js",[],["104","105"],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/reportWebVitals.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/App.js",["106"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./pages/home.js\";\nimport MyProjects from \"./pages/myProjects.js\";\nimport Application from \"./pages/Application\";\nimport UserProvider from \"./providers/UserProvider\";\nimport About from \"./pages/about\";\n\nimport { useState } from \"react\";\n\nfunction App() {\n  return (\n    <Router>\n      <UserProvider>\n        <Application />\n      </UserProvider>\n      <div>\n        <Switch>\n          <Route exact path={\"/\"}>\n            <Home />\n          </Route>\n\n          <Route exact path={\"/projects\"}>\n            <MyProjects />\n          </Route>\n\n          <Route exact path={\"/about\"}>\n            <About />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/myProjects.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/home.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/Application.js",["107"],"import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport ProfilePage from \"./ProfilePage\";\nimport PasswordReset from \"./PasswordReset\";\nfunction Application() {\n  const user = null;\n  return (\n        user ?\n        <ProfilePage />\n      :\n        <Router>\n          <SignUp path=\"signUp\" />\n         \n          <PasswordReset path = \"passwordReset\" />\n        </Router>\n\n  );\n}\nexport default Application;","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/about.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/providers/UserProvider.jsx",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/SignIn.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/SignUp.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/ProfilePage.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/PasswordReset.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Navbar/index.js",["108","109"],"import React from \"react\";\nimport \"./styles.css\";\n\nfunction Nav() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark nav-color\">\n            <div className=\"container\">\n                \n                <div className=\"row\">\n                    <a href=\"\"><img src=\"flashgrid-logo-white.png\"></img></a>\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            Home\n                        </a>\n                    </div>\n\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/about\">\n                            About\n                        </a>\n                    </div>\n\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/projects\">\n                            My Projects\n                        </a>\n                    </div>\n\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            Login\n                        </a>\n                    </div>\n                </div>\n\n            </div>\n\n         \n        </nav>\n    );\n}\n\nexport default Nav;\n","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Jumbotron/index.js",["110","111"],"import React from \"react\";\nimport \"./styles.css\";\n\nfunction Jumbotron() {\n  return (<div>\n    <div className=\"jumbotron b\">\n      <h1> Welcome to</h1>\n      <img src=\"flashgrid.png\"></img>\n      <h4>where projects are made in a flash</h4>\n    </div>\n<img src=\"digital-marketing-meeting.jpg\"></img>\n  </div>\n  \n\n  );\n}\n\nexport default Jumbotron;\n","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Wrapper/index.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/utils/firebase.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/HelloFlashGrid/index.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/ProjectsContainer/index.js",["112","113","114","115","116","117","118"],"import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport Column from \"../Column\";\nimport API from \"../../utils/API\";\nimport ModalForm from \"../Modal\";\nimport RenderForm from \"../RenderForm\";\nimport TaskFormButton from \"../TaskFormButton\";\n\n\nfunction ProjectsContainer(props) {\n  const [user, setUser] = useState({})\n  const [projectNameList, setProjectNameList] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState([]);\n  const [test, setTest] = useState({});\n  const [taskForm, setTaskForm] = useState();\n  const [taskFormBoolean, setTaskFormBoolean] = useState(false);\n  const [formState, setFormState] = useState({});\n\n  useEffect(() => {\n    // This will not be hard coded once the log in system is up and running.\n    setProjects(data);\n    loadProjects();\n    // .catch(err => console.log(err)));\n    console.log(test);\n    // renderProjects();\n  }, []);\n\n  useEffect(() => {\n    console.log(test);\n  }, [test]);\n\n  function findProject(e, item) {\n    const foundProject = projects.filter(project => item === project.projectName)\n    setCurrentProject(foundProject)\n\n  }\n\n  // sets the project name list when the projects changes\n  useEffect(() => {\n    const NameList = projects.map(item => {\n      return (\n        item.projectName\n      )\n    });\n    setUser({ userName: \"playerthomasm6@gmail.com\" })\n    setProjectNameList([...new Set(NameList)]);\n  }, [projects])\n\n  const data = [\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Create project page\",\n      taskDescription: \"write code to render information on the project page\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/28/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Project Page CSS\",\n      taskDescription: \"Utilize CSS to format the project page\",\n      taskAssigne: \"John\",\n      taskDueDate: \"02/28/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"mathewHarris@gmail.com\",\n      projectName: \"Radical Gamez\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Tipster\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Tipster\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Other Project\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Final Project\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    }\n  ];\n\n  const loadProjects = () => {\n    API.getProjects().then(res => setProjects(res.data));\n  };\n\n  // function handleInputChange(event) {\n  //     const { name, value } = event.target;\n  //     setFormObject({...formObject, [name]: value})\n  //   };\n\n  // DELETE TASK\n  // ==========================\n  function deleteThatTask(id) {\n    console.log(id);\n    API.deleteTask(id)\n      .then(res => {\n        console.log('fire1')\n        loadProjects()\n      })\n      .then(() => {\n        console.log('fire2')\n        console.log(currentProject[0].projectName)\n        findProject(\"bullshit\", currentProject[0].projectName)\n      })\n      .catch(err => console.log(err));\n  }\n\n  // CREATE TASK\n  // ==========================\n  function createNewTask() {\n    console.log(currentProject)\n    const task = {\n      userName: currentProject[0].userName,\n      projectName: currentProject[0].projectName,\n      projectDescription: currentProject[0].projectDescription,\n      taskName: formState.userName,\n      taskDescription: formState.taskDescription,\n      taskAssigne: formState.taskAssigne,\n      taskDueDate: formState.taskDueDate,\n      taskComplete: false\n    }\n    API.saveTask(task)\n      .then(res => loadProjects())\n      .catch(err => console.log(err));\n  }\n\n  function handleNow(event) {\n    const value = event.target.getAttribute(\"value\");\n    const name = event.target.getAttribute(\"name\");\n\n    console.log(value + name);\n    setCurrentProject({ currentProject: value });\n    console.log(currentProject);\n  }\n\n  const [show, setShow] = useState(false);\n  const [editData, setEditData] = useState({});\n  const handleClose = () => setShow(false);\n  const handleEditBtn = eData => {\n    setShow(true);\n    setEditData(eData);\n  };\n\n  const loadTaskForm = () => {\n    console.log(\"it worked\")\n    setTaskFormBoolean(true)\n  }\n\n  const submitNewTask = (e) => {\n    e.preventDefault();\n    console.log(\"New Task Created\");\n\n    console.log(formState)\n\n    const task = {\n      userName: currentProject[0].userName,\n      projectName: currentProject[0].projectName,\n      projectDescription: currentProject[0].projectDescription,\n      taskName: formState.taskName,\n      taskDescription: formState.taskDescription,\n      taskAssigne: formState.taskAssigne,\n      taskDueDate: formState.taskDueDate,\n      taskComplete: false\n    }\n    API.saveTask(task)\n      .then(res => loadProjects())\n      .then(() => setTaskFormBoolean(false))\n      .then(() => setFormState({}))\n      .catch(err => console.log(err));\n  }\n\n  function handleFormInput(event) {\n    const { name, value } = event.target\n\n    setFormState({ ...formState, [name]: value })\n  }\n\n  const getForm = () => {\n    if (taskFormBoolean) {\n      return <RenderForm\n        formState={formState}\n        submitNewTask={(e) => submitNewTask(e)}\n        handleFormInput={(e) => handleFormInput(e)}\n      />\n    } else {\n      return <TaskFormButton\n        loadTaskForm={() => loadTaskForm()}\n      />\n    }\n  }\n\n  return (\n    <>\n      <ModalForm show={show} handleClose={handleClose} editData={editData} />\n      <div className=\"container-fluid space-out\">\n        <h6>Current User: {user.userName}</h6>\n\n        <div className=\"row\"></div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-2\">\n            {projectNameList.map(item => (\n              <p\n                className=\"pointer\"\n                key={item + \"1\"}\n                value={item}\n                // name={item.userName}\n                onClick={event => findProject(event, item)}\n              >\n                {item}\n              </p>\n            ))}\n          </div>\n\n          <div className=\"col-sm-10\">\n            <table class=\"table striped bordered hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Tasks</th>\n                  <th scope=\"col\">Description</th>\n                  <th scope=\"col\">Assigned Personel</th>\n                  <th scope=\"col\">Due Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentProject.map(item => (\n                  <tr\n                  key={item._id}\n                  >\n                    <td \n                    id={item._id} \n                    name=\"taskName\">\n                      {item.taskName}\n                      <button\n                        value={item._id}\n                        onClick={e => deleteThatTask(e.target.value)}\n                      >\n                        X\n                      </button>\n                    </td>\n\n                    <td> {item.taskDescription}</td>\n\n                    <td>{item.taskAssigne}</td>\n\n                    <td>\n                      {item.taskDueDate}{\" \"}\n                      <button onClick={() => handleEditBtn(item)}>Edit</button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <div>\n              {getForm()}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProjectsContainer;\n","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/utils/API.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Sidebar/index.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Column/index.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Modal/index.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/RenderForm/index.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/TaskFormButton/index.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":10,"column":10,"nodeType":"125","messageId":"126","endLine":10,"endColumn":18},{"ruleId":"123","severity":1,"message":"127","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":10,"column":21,"nodeType":"130","endLine":10,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":10,"column":32,"nodeType":"130","endLine":10,"endColumn":68},{"ruleId":"131","severity":1,"message":"132","line":8,"column":7,"nodeType":"130","endLine":8,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":11,"column":1,"nodeType":"130","endLine":11,"endColumn":42},{"ruleId":"123","severity":1,"message":"133","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},{"ruleId":"123","severity":1,"message":"134","line":15,"column":16,"nodeType":"125","messageId":"126","endLine":15,"endColumn":23},{"ruleId":"123","severity":1,"message":"135","line":16,"column":10,"nodeType":"125","messageId":"126","endLine":16,"endColumn":18},{"ruleId":"123","severity":1,"message":"136","line":16,"column":20,"nodeType":"125","messageId":"126","endLine":16,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":27,"column":6,"nodeType":"139","endLine":27,"endColumn":8,"suggestions":"140"},{"ruleId":"123","severity":1,"message":"141","line":180,"column":12,"nodeType":"125","messageId":"126","endLine":180,"endColumn":25},{"ruleId":"123","severity":1,"message":"142","line":197,"column":12,"nodeType":"125","messageId":"126","endLine":197,"endColumn":21},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'SignIn' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Column' is defined but never used.","'setTest' is assigned a value but never used.","'taskForm' is assigned a value but never used.","'setTaskForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'test'. Either include them or remove the dependency array.","ArrayExpression",["145"],"'createNewTask' is defined but never used.","'handleNow' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},"Update the dependencies array to be: [data, test]",{"range":"148","text":"149"},[946,948],"[data, test]"]