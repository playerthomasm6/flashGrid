[{"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\index.js":"1","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\reportWebVitals.js":"2","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\App.js":"3","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\home.js":"4","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\myProjects.js":"5","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\Application.js":"6","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\about.js":"7","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\providers\\UserProvider.jsx":"8","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\SignIn.js":"9","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\SignUp.js":"10","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\ProfilePage.js":"11","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\PasswordReset.js":"12","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Navbar\\index.js":"13","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Jumbotron\\index.js":"14","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Wrapper\\index.js":"15","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\firebase.js":"16","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\HelloFlashGrid\\index.js":"17","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\ProjectsContainer\\index.js":"18","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\API.js":"19","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Sidebar\\index.js":"20","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Column\\index.js":"21"},{"size":547,"mtime":1612030877237,"results":"22","hashOfConfig":"23"},{"size":397,"mtime":1613700743548,"results":"24","hashOfConfig":"23"},{"size":814,"mtime":1613834665110,"results":"25","hashOfConfig":"23"},{"size":355,"mtime":1613700743499,"results":"26","hashOfConfig":"23"},{"size":540,"mtime":1614124451679,"results":"27","hashOfConfig":"23"},{"size":525,"mtime":1613700743495,"results":"28","hashOfConfig":"23"},{"size":367,"mtime":1613700743498,"results":"29","hashOfConfig":"23"},{"size":749,"mtime":1613700743515,"results":"30","hashOfConfig":"23"},{"size":2792,"mtime":1613700743497,"results":"31","hashOfConfig":"23"},{"size":3524,"mtime":1613700743498,"results":"32","hashOfConfig":"23"},{"size":990,"mtime":1613700743497,"results":"33","hashOfConfig":"23"},{"size":2293,"mtime":1613700743496,"results":"34","hashOfConfig":"23"},{"size":769,"mtime":1614124482892,"results":"35","hashOfConfig":"23"},{"size":280,"mtime":1612319243820,"results":"36","hashOfConfig":"23"},{"size":1206,"mtime":1613700743494,"results":"37","hashOfConfig":"23"},{"size":1409,"mtime":1613700743549,"results":"38","hashOfConfig":"23"},{"size":780,"mtime":1612319188360,"results":"39","hashOfConfig":"23"},{"size":9264,"mtime":1614126802263,"results":"40","hashOfConfig":"23"},{"size":658,"mtime":1614124451687,"results":"41","hashOfConfig":"23"},{"size":615,"mtime":1613700743493,"results":"42","hashOfConfig":"23"},{"size":407,"mtime":1614124451625,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"mhfd4y",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\index.js",[],["89","90"],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\reportWebVitals.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\App.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\home.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\myProjects.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\Application.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\about.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\providers\\UserProvider.jsx",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\SignIn.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\SignUp.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\ProfilePage.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\PasswordReset.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Navbar\\index.js",["91","92","93","94","95","96"],"import React from \"react\";\nimport \"./styles.css\";\n\nfunction Nav() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark nav-color\">\n            <div className=\"container\" id=\"main_menu\">\n                <div class=\"logo_area\">\n                    <a href=\"\"><img src=\"flashgrid.png\"></img></a>\n                </div>\n                <div className=\"row\" id=\"inner_main_menu\">\n                    <ul>\n                        <li><a href=\"\">Home</a></li>\n                        <li><a href=\"\">About</a></li>\n                        <li><a href=\"\">Log In</a></li>\n                        <li><a href=\"\">My Projects</a></li>\n                    </ul>\n                </div>\n\n            </div>\n\n         \n        </nav>\n    );\n}\n\nexport default Nav;\n","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Jumbotron\\index.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Wrapper\\index.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\firebase.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\HelloFlashGrid\\index.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\ProjectsContainer\\index.js",["97","98","99","100"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport Column from \"../Column\";\r\nimport API from \"../../utils/API\"\r\n\r\nfunction ProjectsContainer() {\r\n    const [user, setUser] = useState({})\r\n    const [projectNameList, setProjectNameList] = useState([]); \r\n    const [projects, setProjects] = useState([]);\r\n    const [currentProject, setCurrentProject] = useState([]);\r\n    const [test, setTest] = useState({});\r\n    \r\n    useEffect(() => {\r\n        // This will not be hard coded once the log in system is up and running.\r\n        setProjects(data);\r\n        loadProjects();\r\n            // .catch(err => console.log(err)));\r\n        console.log(test);\r\n        // renderProjects();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(test);\r\n        \r\n    }, [test]);\r\n\r\n    \r\n    function findProject(e, item) {\r\n        const foundProject = projects.filter(project => item === project.projectName)\r\n        setCurrentProject(foundProject)\r\n        console.log(user.userName)\r\n        console.log(currentProject.userName)\r\n    }\r\n    // sets the project name list when the projects changes\r\n    useEffect(() => {\r\n        const NameList = projects.map(item => {\r\n            return (\r\n                item.projectName\r\n            )\r\n        });\r\n        setUser({userName: \"playerthomasm6@gmail.com\"})\r\n        setProjectNameList([...new Set(NameList)]);\r\n    }, [projects])\r\n\r\n    const data = [\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Flash Grid\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Flash Grid\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Create project page\",\r\n            taskDescription: \"write code to render information on the project page\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/28/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Flash Grid\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Project Page CSS\",\r\n            taskDescription: \"Utilize CSS to format the project page\",\r\n            taskAssigne: \"John\",\r\n            taskDueDate: \"02/28/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Flash Grid\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"mathewHarris@gmail.com\",\r\n            projectName: \"Radical Gamez\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Tipster\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Tipster\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Other Project\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Final Project\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n    ];\r\n\r\n   const loadProjects = () => {\r\n        API.getProjects()\r\n        .then(res => \r\n            setProjects(res.data));\r\n    }\r\n    \r\n\r\n    // function handleInputChange(event) {\r\n    //     const { name, value } = event.target;\r\n    //     setFormObject({...formObject, [name]: value})\r\n    //   };\r\n\r\n      function deleteThatTask(id) {\r\n        API.deleteTask(id)\r\n          .then(res => loadProjects())\r\n          .catch(err => console.log(err));\r\n      }\r\n\r\n   function handleNow (event) {\r\n    const value = event.target.getAttribute(\"value\");\r\n    const name = event.target.getAttribute(\"name\");\r\n    \r\n    console.log(value + name)\r\n    setCurrentProject({currentProject: value});\r\n    console.log(currentProject)\r\n   }\r\n\r\n    return (\r\n        <div className=\"container-fluid space-out\">\r\n            <h6>Current User: {user.userName}</h6>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2\">\r\n                <h5>Projects</h5>\r\n                </div>\r\n            \r\n                <div className=\"col-sm-2\">\r\n                <h5>Tasks</h5>\r\n                </div>\r\n                \r\n                <div className=\"col-sm-2\">\r\n                <h5>Description</h5>\r\n                </div>\r\n\r\n                <div className=\"col-sm-2\">\r\n                <h5>Assigned Personel</h5>\r\n                </div>\r\n\r\n                <div className=\"col-sm-2\">\r\n                <h5>Due Date</h5>\r\n                </div>\r\n\r\n                <div className=\"col-sm-2\">\r\n                <h5>Due Date</h5>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-sm-2\">\r\n                {projectNameList.map(item => (\r\n                        <p className=\"pointer\"\r\n                        key={item + \"1\"}\r\n                        value={item}\r\n                        name={item.userName}\r\n                        onClick={(event) => findProject(event, item)}\r\n                        >{item}</p>\r\n                        \r\n                    ))}\r\n                </div>\r\n                \r\n                     {currentProject.map(item => (\r\n                         <div>\r\n                            <div className=\"col-sm-2\"\r\n                            key={item._id}\r\n                            id={item._id}\r\n                            >\r\n                            <textarea\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            name=\"taskName\"\r\n                            >{item.taskName}</textarea>\r\n                            {/* <button\r\n                            onClick={(e) => saveItem}>Save</button> */}\r\n                            <button\r\n                            onClick={() => deleteThatTask(item._id)}>X</button>\r\n                            </div>\r\n\r\n                            \r\n                            <div className=\"col-sm-2\">\r\n                            <p> {item.taskDescription}</p>\r\n                            </div>\r\n                        \r\n\r\n                            <div className=\"col-sm-2\">\r\n                            <p>{item.taskAssigne}</p>\r\n                            </div>\r\n                            \r\n                            \r\n                            <div className=\"col-sm-2\">\r\n                            <p>{item.taskDueDate}</p>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm-2\">\r\n                            <p>{item.taskDueDate}</p>\r\n                            </div>  \r\n                        </div>\r\n                         \r\n                    ))} \r\n            \r\n                \r\n            </div>\r\n\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default ProjectsContainer;","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\API.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Sidebar\\index.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Column\\index.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":9,"column":21,"nodeType":"107","endLine":9,"endColumn":32},{"ruleId":"108","severity":1,"message":"109","line":9,"column":32,"nodeType":"107","endLine":9,"endColumn":57},{"ruleId":"105","severity":1,"message":"106","line":13,"column":29,"nodeType":"107","endLine":13,"endColumn":40},{"ruleId":"105","severity":1,"message":"106","line":14,"column":29,"nodeType":"107","endLine":14,"endColumn":40},{"ruleId":"105","severity":1,"message":"106","line":15,"column":29,"nodeType":"107","endLine":15,"endColumn":40},{"ruleId":"105","severity":1,"message":"106","line":16,"column":29,"nodeType":"107","endLine":16,"endColumn":40},{"ruleId":"110","severity":1,"message":"111","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":14},{"ruleId":"110","severity":1,"message":"114","line":11,"column":18,"nodeType":"112","messageId":"113","endLine":11,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":20,"column":8,"nodeType":"117","endLine":20,"endColumn":10,"suggestions":"118"},{"ruleId":"110","severity":1,"message":"119","line":156,"column":13,"nodeType":"112","messageId":"113","endLine":156,"endColumn":22},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'Column' is defined but never used.","Identifier","unusedVar","'setTest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'test'. Either include them or remove the dependency array.","ArrayExpression",["122"],"'handleNow' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [data, test]",{"range":"125","text":"126"},[722,724],"[data, test]"]