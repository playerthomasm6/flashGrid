[{"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\index.js":"1","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\reportWebVitals.js":"2","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\App.js":"3","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\home.js":"4","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\myProjects.js":"5","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\Application.js":"6","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\about.js":"7","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\providers\\UserProvider.jsx":"8","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\SignIn.js":"9","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\SignUp.js":"10","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\ProfilePage.js":"11","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\PasswordReset.js":"12","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Navbar\\index.js":"13","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Jumbotron\\index.js":"14","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Wrapper\\index.js":"15","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\firebase.js":"16","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\HelloFlashGrid\\index.js":"17","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\ProjectsContainer\\index.js":"18","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\API.js":"19","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Sidebar\\index.js":"20","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Column\\index.js":"21","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\renderForm\\index.js":"22","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\TaskFormButton\\index.js":"23","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\RenderForm\\index.js":"24"},{"size":547,"mtime":1612030877237,"results":"25","hashOfConfig":"26"},{"size":397,"mtime":1613700743548,"results":"27","hashOfConfig":"26"},{"size":814,"mtime":1613834665110,"results":"28","hashOfConfig":"26"},{"size":355,"mtime":1613700743499,"results":"29","hashOfConfig":"26"},{"size":540,"mtime":1614124451679,"results":"30","hashOfConfig":"26"},{"size":525,"mtime":1613700743495,"results":"31","hashOfConfig":"26"},{"size":367,"mtime":1613700743498,"results":"32","hashOfConfig":"26"},{"size":749,"mtime":1613700743515,"results":"33","hashOfConfig":"26"},{"size":2792,"mtime":1613700743497,"results":"34","hashOfConfig":"26"},{"size":3524,"mtime":1613700743498,"results":"35","hashOfConfig":"26"},{"size":990,"mtime":1613700743497,"results":"36","hashOfConfig":"26"},{"size":2293,"mtime":1613700743496,"results":"37","hashOfConfig":"26"},{"size":769,"mtime":1614124482892,"results":"38","hashOfConfig":"26"},{"size":280,"mtime":1612319243820,"results":"39","hashOfConfig":"26"},{"size":1206,"mtime":1613700743494,"results":"40","hashOfConfig":"26"},{"size":1409,"mtime":1613700743549,"results":"41","hashOfConfig":"26"},{"size":780,"mtime":1612319188360,"results":"42","hashOfConfig":"26"},{"size":12289,"mtime":1614300812334,"results":"43","hashOfConfig":"26"},{"size":658,"mtime":1614124451687,"results":"44","hashOfConfig":"26"},{"size":615,"mtime":1613700743493,"results":"45","hashOfConfig":"26"},{"size":407,"mtime":1614299223076,"results":"46","hashOfConfig":"26"},{"size":1467,"mtime":1614301987649,"results":"47","hashOfConfig":"26"},{"size":251,"mtime":1614300385675,"results":"48","hashOfConfig":"26"},{"size":1467,"mtime":1614301987649,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"mhfd4y",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\index.js",[],["101","102"],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\reportWebVitals.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\App.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\home.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\myProjects.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\Application.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\about.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\providers\\UserProvider.jsx",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\SignIn.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\SignUp.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\ProfilePage.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\pages\\PasswordReset.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Navbar\\index.js",["103","104","105","106","107","108"],"import React from \"react\";\nimport \"./styles.css\";\n\nfunction Nav() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark nav-color\">\n            <div className=\"container\" id=\"main_menu\">\n                <div class=\"logo_area\">\n                    <a href=\"\"><img src=\"flashgrid.png\"></img></a>\n                </div>\n                <div className=\"row\" id=\"inner_main_menu\">\n                    <ul>\n                        <li><a href=\"\">Home</a></li>\n                        <li><a href=\"\">About</a></li>\n                        <li><a href=\"\">Log In</a></li>\n                        <li><a href=\"\">My Projects</a></li>\n                    </ul>\n                </div>\n\n            </div>\n\n         \n        </nav>\n    );\n}\n\nexport default Nav;\n","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Jumbotron\\index.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Wrapper\\index.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\firebase.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\HelloFlashGrid\\index.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\ProjectsContainer\\index.js",["109","110","111","112","113","114"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport Column from \"../Column\";\r\nimport API from \"../../utils/API\";\r\nimport RenderForm from \"../RenderForm\";\r\nimport TaskFormButton from \"../TaskFormButton\";\r\n\r\n\r\nfunction ProjectsContainer() {\r\n    const [user, setUser] = useState({})\r\n    const [projectNameList, setProjectNameList] = useState([]);\r\n    const [projects, setProjects] = useState([]);\r\n    const [currentProject, setCurrentProject] = useState([]);\r\n    const [test, setTest] = useState({});\r\n    const [taskForm, setTaskForm] = useState();\r\n    const [taskFormBoolean, setTaskFormBoolean] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // This will not be hard coded once the log in system is up and running.\r\n        setProjects(data);\r\n        loadProjects();\r\n        formTime();\r\n        // .catch(err => console.log(err)));\r\n        // renderProjects();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        formTime();\r\n\r\n    }, [taskFormBoolean]);\r\n\r\n\r\n    function findProject(e, item) {\r\n        const foundProject = projects.filter(project => item === project.projectName)\r\n        setCurrentProject(foundProject)\r\n        console.log(user.userName)\r\n        console.log(currentProject.userName)\r\n    }\r\n    // sets the project name list when the projects changes\r\n    useEffect(() => {\r\n        const NameList = projects.map(item => {\r\n            return (\r\n                item.projectName\r\n            )\r\n        });\r\n        setUser({ userName: \"playerthomasm6@gmail.com\" })\r\n        setProjectNameList([...new Set(NameList)]);\r\n    }, [projects])\r\n\r\n    const data = [\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Flash Grid\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Flash Grid\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Create project page\",\r\n            taskDescription: \"write code to render information on the project page\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/28/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Flash Grid\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Project Page CSS\",\r\n            taskDescription: \"Utilize CSS to format the project page\",\r\n            taskAssigne: \"John\",\r\n            taskDueDate: \"02/28/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Flash Grid\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"mathewHarris@gmail.com\",\r\n            projectName: \"Radical Gamez\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Tipster\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Tipster\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Other Project\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n        {\r\n            userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Final Project\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Assign tasks\",\r\n            taskDescription: \"Assign tasks to each team member\",\r\n            taskAssigne: \"Thomas\",\r\n            taskDueDate: \"02/11/2021\",\r\n            taskComplete: false\r\n        },\r\n    ];\r\n\r\n    const loadProjects = () => {\r\n        API.getProjects()\r\n            .then(res =>\r\n                setProjects(res.data));\r\n    }\r\n\r\n\r\n    // function handleInputChange(event) {\r\n    //     const { name, value } = event.target;\r\n    //     setFormObject({...formObject, [name]: value})\r\n    //   };\r\n\r\n\r\n    // DELETE TASK\r\n    // ==========================\r\n    function deleteThatTask(id) {\r\n        console.log(id);\r\n        API.deleteTask(id)\r\n            .then(res => loadProjects())\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n\r\n    // CREATE TASK\r\n    // ==========================\r\n     function createNewTask() {\r\n                                console.log(currentProject)\r\n         const task= {\r\n                                userName: \"playerthomasm6@gmail.com\",\r\n            projectName: \"Flash Grid\",\r\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\r\n            taskName: \"Make Table\",\r\n            taskDescription: \"Make A table\",\r\n            taskAssigne: \"Mathew\",\r\n            taskDueDate: \"02/28/2021\",\r\n            taskComplete: false\r\n         }\r\n         API.saveTask(task)\r\n         .then(res => loadProjects())\r\n            .catch(err => console.log(err));\r\n     }\r\n\r\n    function handleNow(event) {\r\n        const value = event.target.getAttribute(\"value\");\r\n        const name = event.target.getAttribute(\"name\");\r\n\r\n        console.log(value + name)\r\n        setCurrentProject({currentProject: value });\r\n        console.log(currentProject)\r\n    }\r\n\r\n    const loadTaskForm = () => {\r\n        console.log(\"it worked\")\r\n       setTaskFormBoolean(true)\r\n    }\r\n\r\n    const formTime = () => {\r\n    if (taskFormBoolean) {\r\n        setTaskForm(<RenderForm/>)\r\n    } else {\r\n        setTaskForm(<TaskFormButton\r\n       loadTaskForm ={() => loadTaskForm()}\r\n        />)\r\n    }\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid space-out\">\r\n                                <h6>Current User: {user.userName}</h6>\r\n\r\n                                <div className=\"row\">\r\n\r\n\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col-sm-2\">\r\n                                        <table className=\"table striped bordered hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Projects</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {projectNameList.map(item => (\r\n                                                    <tr>\r\n                                                        <td className=\"pointer\"\r\n                                                            key={item}\r\n                                                            value={item}\r\n                                                            name={item.userName}\r\n                                                            onClick={(event) => findProject(event, item)}\r\n                                                        >{item}</td>\r\n                                                    </tr>\r\n                                                ))}\r\n\r\n                                            </tbody>\r\n\r\n\r\n                                        </table>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-sm-10\">\r\n                                        <table class=\"table striped bordered hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">Tasks</th>\r\n                                                    <th scope=\"col\">Description</th>\r\n                                                    <th scope=\"col\">Assigned Personel</th>\r\n                                                    <th scope=\"col\">Due Date</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                {currentProject.map(item => (\r\n                                                    <tr>\r\n                                                        <td\r\n                                                            key={item._id}\r\n                                                            id={item._id}\r\n                                                            name=\"taskName\" >\r\n                                                            {item.taskName}\r\n                                                            <button\r\n                                                                value={item._id}\r\n                                                                onClick={(e) => deleteThatTask(e.target.value)}>X</button>\r\n\r\n                                                        </td>\r\n\r\n                                                        <td key={item.taskDescription}> {item.taskDescription}</td>\r\n\r\n                                                        <td key={item.taskAssigne}>{item.taskAssigne}</td>\r\n\r\n                                                        <td key={item.taskDueDate}>{item.taskDueDate}</td>\r\n\r\n                                                    </tr>\r\n                                                ))}\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <button\r\n                                                            onClick={() => createNewTask()}\r\n                                                        >Create New Task for</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                                    <div>\r\n                                                    {taskForm}\r\n                                                    </div>\r\n                                            \r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ProjectsContainer;","C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\utils\\API.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Sidebar\\index.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\Column\\index.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\renderForm\\index.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\TaskFormButton\\index.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\flashGrid\\client\\src\\components\\RenderForm\\index.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":9,"column":21,"nodeType":"121","endLine":9,"endColumn":32},{"ruleId":"122","severity":1,"message":"123","line":9,"column":32,"nodeType":"121","endLine":9,"endColumn":57},{"ruleId":"119","severity":1,"message":"120","line":13,"column":29,"nodeType":"121","endLine":13,"endColumn":40},{"ruleId":"119","severity":1,"message":"120","line":14,"column":29,"nodeType":"121","endLine":14,"endColumn":40},{"ruleId":"119","severity":1,"message":"120","line":15,"column":29,"nodeType":"121","endLine":15,"endColumn":40},{"ruleId":"119","severity":1,"message":"120","line":16,"column":29,"nodeType":"121","endLine":16,"endColumn":40},{"ruleId":"124","severity":1,"message":"125","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"128","line":14,"column":12,"nodeType":"126","messageId":"127","endLine":14,"endColumn":16},{"ruleId":"124","severity":1,"message":"129","line":14,"column":18,"nodeType":"126","messageId":"127","endLine":14,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":25,"column":8,"nodeType":"132","endLine":25,"endColumn":10,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":30,"column":8,"nodeType":"132","endLine":30,"endColumn":25,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"136","line":186,"column":14,"nodeType":"126","messageId":"127","endLine":186,"endColumn":23},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'Column' is defined but never used.","Identifier","unusedVar","'test' is assigned a value but never used.","'setTest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'formTime'. Either include them or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'formTime'. Either include it or remove the dependency array.",["140"],"'handleNow' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [data, formTime]",{"range":"145","text":"146"},"Update the dependencies array to be: [formTime, taskFormBoolean]",{"range":"147","text":"148"},[916,918],"[data, formTime]",[977,994],"[formTime, taskFormBoolean]"]