[{"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/index.js":"1","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/reportWebVitals.js":"2","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/App.js":"3","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/home.js":"4","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/myProjects.js":"5","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/about.js":"6","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/Application.js":"7","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/providers/UserProvider.jsx":"8","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Wrapper/index.js":"9","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Jumbotron/index.js":"10","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Navbar/index.js":"11","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/SignIn.js":"12","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/PasswordReset.js":"13","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/SignUp.js":"14","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/ProfilePage.js":"15","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/utils/firebase.js":"16","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/HelloFlashGrid/index.js":"17","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/ProjectsContainer/index.js":"18","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/utils/API.js":"19","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Sidebar/index.js":"20","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Modal/index.js":"21","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Column/index.js":"22","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/TaskFormButton/index.js":"23","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/RenderForm/index.js":"24"},{"size":547,"mtime":1613242461378,"results":"25","hashOfConfig":"26"},{"size":385,"mtime":1613242461382,"results":"27","hashOfConfig":"26"},{"size":834,"mtime":1614307389646,"results":"28","hashOfConfig":"26"},{"size":337,"mtime":1613242085051,"results":"29","hashOfConfig":"26"},{"size":523,"mtime":1614305579769,"results":"30","hashOfConfig":"26"},{"size":350,"mtime":1613232430092,"results":"31","hashOfConfig":"26"},{"size":485,"mtime":1614452483181,"results":"32","hashOfConfig":"26"},{"size":720,"mtime":1613242461382,"results":"33","hashOfConfig":"26"},{"size":1177,"mtime":1613232430085,"results":"34","hashOfConfig":"26"},{"size":345,"mtime":1614452483169,"results":"35","hashOfConfig":"26"},{"size":1222,"mtime":1614452483174,"results":"36","hashOfConfig":"26"},{"size":2712,"mtime":1613242085050,"results":"37","hashOfConfig":"26"},{"size":2217,"mtime":1613242085049,"results":"38","hashOfConfig":"26"},{"size":3414,"mtime":1613242085051,"results":"39","hashOfConfig":"26"},{"size":965,"mtime":1613242085050,"results":"40","hashOfConfig":"26"},{"size":1353,"mtime":1613242461382,"results":"41","hashOfConfig":"26"},{"size":747,"mtime":1613232430069,"results":"42","hashOfConfig":"26"},{"size":10256,"mtime":1614452060018,"results":"43","hashOfConfig":"26"},{"size":634,"mtime":1614124393855,"results":"44","hashOfConfig":"26"},{"size":598,"mtime":1613232430078,"results":"45","hashOfConfig":"26"},{"size":2113,"mtime":1614439773785,"results":"46","hashOfConfig":"26"},{"size":388,"mtime":1614124393773,"results":"47","hashOfConfig":"26"},{"size":187,"mtime":1614448762406,"results":"48","hashOfConfig":"26"},{"size":2177,"mtime":1614450142880,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ozrwq1",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/index.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/reportWebVitals.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/App.js",["103"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./pages/home.js\";\nimport MyProjects from \"./pages/myProjects.js\";\nimport Application from \"./pages/Application\";\nimport UserProvider from \"./providers/UserProvider\";\nimport About from \"./pages/about\";\n\nimport { useState } from \"react\";\n\nfunction App() {\n  return (\n    <Router>\n      <UserProvider>\n        <Application />\n      </UserProvider>\n      <div>\n        <Switch>\n          <Route exact path={\"/\"}>\n            <Home />\n          </Route>\n\n          <Route exact path={\"/projects\"}>\n            <MyProjects />\n          </Route>\n\n          <Route exact path={\"/about\"}>\n            <About />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/home.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/myProjects.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/about.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/Application.js",["104"],"import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport ProfilePage from \"./ProfilePage\";\nimport PasswordReset from \"./PasswordReset\";\nfunction Application() {\n  const user = null;\n  return (\n        user ?\n        <ProfilePage />\n      :\n        <Router>\n          <SignUp path=\"signUp\" />\n         \n          <PasswordReset path = \"passwordReset\" />\n        </Router>\n\n  );\n}\nexport default Application;","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/providers/UserProvider.jsx",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Wrapper/index.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Jumbotron/index.js",["105","106"],"import React from \"react\";\nimport \"./styles.css\";\n\nfunction Jumbotron() {\n  return (<div>\n    <div className=\"jumbotron b\">\n      <h1> Welcome to</h1>\n      <img src=\"flashgrid.png\"></img>\n      <h4>where projects are made in a flash</h4>\n    </div>\n<img src=\"digital-marketing-meeting.jpg\"></img>\n  </div>\n  \n\n  );\n}\n\nexport default Jumbotron;\n","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Navbar/index.js",["107","108"],"import React from \"react\";\nimport \"./styles.css\";\n\nfunction Nav() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark nav-color\">\n            <div className=\"container\">\n                \n                <div className=\"row\">\n                    <a href=\"\"><img src=\"flashgrid-logo-white.png\"></img></a>\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            Home\n                        </a>\n                    </div>\n\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/about\">\n                            About\n                        </a>\n                    </div>\n\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/projects\">\n                            My Projects\n                        </a>\n                    </div>\n\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            Login\n                        </a>\n                    </div>\n                </div>\n\n            </div>\n\n         \n        </nav>\n    );\n}\n\nexport default Nav;\n","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/SignIn.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/PasswordReset.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/SignUp.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/pages/ProfilePage.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/utils/firebase.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/HelloFlashGrid/index.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/ProjectsContainer/index.js",["109","110","111","112","113","114","115"],"import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport Column from \"../Column\";\nimport API from \"../../utils/API\";\nimport ModalForm from \"../Modal\";\nimport RenderForm from \"../RenderForm\";\nimport TaskFormButton from \"../TaskFormButton\";\n\n\nfunction ProjectsContainer(props) {\n  const [user, setUser] = useState({})\n  const [projectNameList, setProjectNameList] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState([]);\n  const [test, setTest] = useState({});\n  const [taskForm, setTaskForm] = useState();\n  const [taskFormBoolean, setTaskFormBoolean] = useState(false);\n  const [formState, setFormState] = useState({});\n\n  useEffect(() => {\n    // This will not be hard coded once the log in system is up and running.\n    setProjects(data);\n    loadProjects();\n    // .catch(err => console.log(err)));\n    console.log(test);\n    // renderProjects();\n  }, []);\n\n  useEffect(() => {\n    console.log(test);\n  }, [test]);\n\n  function findProject(e, item) {\n    const foundProject = projects.filter(project => item === project.projectName)\n    setCurrentProject(foundProject)\n\n  }\n\n  // sets the project name list when the projects changes\n  useEffect(() => {\n    const NameList = projects.map(item => {\n      return (\n        item.projectName\n      )\n    });\n    setUser({ userName: \"playerthomasm6@gmail.com\" })\n    setProjectNameList([...new Set(NameList)]);\n  }, [projects])\n\n  const data = [\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Create project page\",\n      taskDescription: \"write code to render information on the project page\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/28/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Project Page CSS\",\n      taskDescription: \"Utilize CSS to format the project page\",\n      taskAssigne: \"John\",\n      taskDueDate: \"02/28/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"mathewHarris@gmail.com\",\n      projectName: \"Radical Gamez\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Tipster\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Tipster\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Other Project\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Final Project\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    }\n  ];\n\n  const loadProjects = () => {\n    API.getProjects().then(res => setProjects(res.data));\n  };\n\n  // function handleInputChange(event) {\n  //     const { name, value } = event.target;\n  //     setFormObject({...formObject, [name]: value})\n  //   };\n\n  // DELETE TASK\n  // ==========================\n  function deleteThatTask(id) {\n    console.log(id);\n    API.deleteTask(id)\n      .then(res => {\n        console.log('fire1')\n        loadProjects()\n      })\n      .then(() => {\n        console.log('fire2')\n        console.log(currentProject[0].projectName)\n        findProject(\"bullshit\", currentProject[0].projectName)\n      })\n      .then(() => {\n        const newTasks = currentProject.filter((task) => task._id !== id);\n        setCurrentProject(newTasks);\n      })\n      .catch(err => console.log(err));\n  }\n\n  // CREATE TASK\n  // ==========================\n  function createNewTask() {\n    console.log(currentProject)\n    const task = {\n      userName: currentProject[0].userName,\n      projectName: currentProject[0].projectName,\n      projectDescription: currentProject[0].projectDescription,\n      taskName: formState.userName,\n      taskDescription: formState.taskDescription,\n      taskAssigne: formState.taskAssigne,\n      taskDueDate: formState.taskDueDate,\n      taskComplete: false\n    }\n    API.saveTask(task)\n      .then(res => loadProjects())\n      .catch(err => console.log(err));\n  }\n\n  function handleNow(event) {\n    const value = event.target.getAttribute(\"value\");\n    const name = event.target.getAttribute(\"name\");\n\n    console.log(value + name);\n    setCurrentProject({ currentProject: value });\n    console.log(currentProject);\n  }\n\n  const [show, setShow] = useState(false);\n  const [editData, setEditData] = useState({});\n  const handleClose = () => setShow(false);\n  const handleEditBtn = eData => {\n    setShow(true);\n    setEditData(eData);\n  };\n\n  const loadTaskForm = () => {\n    console.log(\"it worked\")\n    setTaskFormBoolean(true)\n  }\n\n  const submitNewTask = (e) => {\n    e.preventDefault();\n    console.log(\"New Task Created\");\n\n    console.log(formState)\n\n    const task = {\n      userName: currentProject[0].userName,\n      projectName: currentProject[0].projectName,\n      projectDescription: currentProject[0].projectDescription,\n      taskName: formState.taskName,\n      taskDescription: formState.taskDescription,\n      taskAssigne: formState.taskAssigne,\n      taskDueDate: formState.taskDueDate,\n      taskComplete: false\n    }\n    API.saveTask(task)\n      .then(res => loadProjects())\n      .then(() => {setCurrentProject([...currentProject, task]);})\n      .then(() => setTaskFormBoolean(false))\n      .then(() => setFormState({}))\n      .catch(err => console.log(err));\n  }\n\n  function handleFormInput(event) {\n    const { name, value } = event.target\n\n    setFormState({ ...formState, [name]: value })\n  }\n\n  const getForm = () => {\n    if (taskFormBoolean) {\n      return <RenderForm\n        formState={formState}\n        submitNewTask={(e) => submitNewTask(e)}\n        handleFormInput={(e) => handleFormInput(e)}\n      />\n    } else {\n      return <TaskFormButton\n        loadTaskForm={() => loadTaskForm()}\n      />\n    }\n  }\n\n  return (\n    <>\n      <ModalForm show={show} handleClose={handleClose} editData={editData} />\n      <div className=\"container-fluid space-out\">\n        <h6>Current User: {user.userName}</h6>\n\n        <div className=\"row\"></div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-2\">\n            {projectNameList.map(item => (\n              <p\n                className=\"pointer\"\n                key={item + \"1\"}\n                value={item}\n                // name={item.userName}\n                onClick={event => findProject(event, item)}\n              >\n                {item}\n              </p>\n            ))}\n          </div>\n\n          <div className=\"col-sm-10\">\n            <table class=\"table striped bordered hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Tasks</th>\n                  <th scope=\"col\">Description</th>\n                  <th scope=\"col\">Assigned Personel</th>\n                  <th scope=\"col\">Due Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentProject.map(item => (\n                  <tr\n                  key={item._id}\n                  >\n                    <td \n                    id={item._id} \n                    name=\"taskName\">\n                      {item.taskName}\n                      <button\n                        value={item._id}\n                        onClick={e => deleteThatTask(e.target.value)}\n                      >\n                        X\n                      </button>\n                    </td>\n\n                    <td> {item.taskDescription}</td>\n\n                    <td>{item.taskAssigne}</td>\n\n                    <td>\n                      {item.taskDueDate}{\" \"}\n                      <button onClick={() => handleEditBtn(item)}>Edit</button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <div>\n              {getForm()}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProjectsContainer;\n","/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/utils/API.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Sidebar/index.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Modal/index.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/Column/index.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/TaskFormButton/index.js",[],"/Users/hkanuri/Desktop/HW/flashgrid/flashGrid/client/src/components/RenderForm/index.js",[],{"ruleId":"116","severity":1,"message":"117","line":10,"column":10,"nodeType":"118","messageId":"119","endLine":10,"endColumn":18},{"ruleId":"116","severity":1,"message":"120","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":8,"column":7,"nodeType":"123","endLine":8,"endColumn":32},{"ruleId":"121","severity":1,"message":"122","line":11,"column":1,"nodeType":"123","endLine":11,"endColumn":42},{"ruleId":"124","severity":1,"message":"125","line":10,"column":21,"nodeType":"123","endLine":10,"endColumn":32},{"ruleId":"121","severity":1,"message":"122","line":10,"column":32,"nodeType":"123","endLine":10,"endColumn":68},{"ruleId":"116","severity":1,"message":"126","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"116","severity":1,"message":"127","line":15,"column":16,"nodeType":"118","messageId":"119","endLine":15,"endColumn":23},{"ruleId":"116","severity":1,"message":"128","line":16,"column":10,"nodeType":"118","messageId":"119","endLine":16,"endColumn":18},{"ruleId":"116","severity":1,"message":"129","line":16,"column":20,"nodeType":"118","messageId":"119","endLine":16,"endColumn":31},{"ruleId":"130","severity":1,"message":"131","line":27,"column":6,"nodeType":"132","endLine":27,"endColumn":8,"suggestions":"133"},{"ruleId":"116","severity":1,"message":"134","line":184,"column":12,"nodeType":"118","messageId":"119","endLine":184,"endColumn":25},{"ruleId":"116","severity":1,"message":"135","line":201,"column":12,"nodeType":"118","messageId":"119","endLine":201,"endColumn":21},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'SignIn' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Column' is defined but never used.","'setTest' is assigned a value but never used.","'taskForm' is assigned a value but never used.","'setTaskForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'test'. Either include them or remove the dependency array.","ArrayExpression",["136"],"'createNewTask' is defined but never used.","'handleNow' is defined but never used.",{"desc":"137","fix":"138"},"Update the dependencies array to be: [data, test]",{"range":"139","text":"140"},[946,948],"[data, test]"]