[{"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/index.js":"1","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/App.js":"2","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/reportWebVitals.js":"3","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/home.js":"4","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/myProjects.js":"5","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/Application.js":"6","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/about.js":"7","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/providers/UserProvider.jsx":"8","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/SignIn.js":"9","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/SignUp.js":"10","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/PasswordReset.js":"11","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/ProfilePage.js":"12","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Navbar/index.js":"13","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Wrapper/index.js":"14","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Jumbotron/index.js":"15","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/utils/firebase.js":"16","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/HelloFlashGrid/index.js":"17","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/ProjectsContainer/index.js":"18","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/utils/API.js":"19","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Column/index.js":"20","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Sidebar/index.js":"21","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/RenderForm/index.js":"22","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/TaskFormButton/index.js":"23"},{"size":547,"mtime":1613692992190,"results":"24","hashOfConfig":"25"},{"size":814,"mtime":1613835837036,"results":"26","hashOfConfig":"25"},{"size":385,"mtime":1613692992195,"results":"27","hashOfConfig":"25"},{"size":337,"mtime":1613692992193,"results":"28","hashOfConfig":"25"},{"size":518,"mtime":1614127264593,"results":"29","hashOfConfig":"25"},{"size":485,"mtime":1614439159751,"results":"30","hashOfConfig":"25"},{"size":350,"mtime":1613692992193,"results":"31","hashOfConfig":"25"},{"size":720,"mtime":1613692992194,"results":"32","hashOfConfig":"25"},{"size":2712,"mtime":1613692992192,"results":"33","hashOfConfig":"25"},{"size":3414,"mtime":1613692992192,"results":"34","hashOfConfig":"25"},{"size":2217,"mtime":1613692992191,"results":"35","hashOfConfig":"25"},{"size":965,"mtime":1613692992192,"results":"36","hashOfConfig":"25"},{"size":1222,"mtime":1614302879718,"results":"37","hashOfConfig":"25"},{"size":1177,"mtime":1613692992189,"results":"38","hashOfConfig":"25"},{"size":345,"mtime":1614443860401,"results":"39","hashOfConfig":"25"},{"size":1353,"mtime":1613692992195,"results":"40","hashOfConfig":"25"},{"size":747,"mtime":1613692992186,"results":"41","hashOfConfig":"25"},{"size":11983,"mtime":1614439638640,"results":"42","hashOfConfig":"25"},{"size":634,"mtime":1614127264597,"results":"43","hashOfConfig":"25"},{"size":388,"mtime":1614127264574,"results":"44","hashOfConfig":"25"},{"size":598,"mtime":1613692992188,"results":"45","hashOfConfig":"25"},{"size":1436,"mtime":1614439638640,"results":"46","hashOfConfig":"25"},{"size":236,"mtime":1614439638641,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"540tvx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/index.js",[],["98","99"],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/App.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/reportWebVitals.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/home.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/myProjects.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/Application.js",["100"],"import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport ProfilePage from \"./ProfilePage\";\nimport PasswordReset from \"./PasswordReset\";\nfunction Application() {\n  const user = null;\n  return (\n        user ?\n        <ProfilePage />\n      :\n        <Router>\n          <SignUp path=\"signUp\" />\n         \n          <PasswordReset path = \"passwordReset\" />\n        </Router>\n\n  );\n}\nexport default Application;","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/about.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/providers/UserProvider.jsx",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/SignIn.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/SignUp.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/PasswordReset.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/pages/ProfilePage.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Navbar/index.js",["101","102"],"import React from \"react\";\nimport \"./styles.css\";\n\nfunction Nav() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark nav-color\">\n            <div className=\"container\">\n                \n                <div className=\"row\">\n                    <a href=\"\"><img src=\"flashgrid-logo-white.png\"></img></a>\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            Home\n                        </a>\n                    </div>\n\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/about\">\n                            About\n                        </a>\n                    </div>\n\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/projects\">\n                            My Projects\n                        </a>\n                    </div>\n\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            Login\n                        </a>\n                    </div>\n                </div>\n\n            </div>\n\n         \n        </nav>\n    );\n}\n\nexport default Nav;\n","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Wrapper/index.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Jumbotron/index.js",["103","104"],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/utils/firebase.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/HelloFlashGrid/index.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/ProjectsContainer/index.js",["105","106","107","108","109","110"],"import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport Column from \"../Column\";\nimport API from \"../../utils/API\";\nimport RenderForm from \"../RenderForm\";\nimport TaskFormButton from \"../TaskFormButton\";\n\n\nfunction ProjectsContainer() {\n    const [user, setUser] = useState({})\n    const [projectNameList, setProjectNameList] = useState([]);\n    const [projects, setProjects] = useState([]);\n    const [currentProject, setCurrentProject] = useState([]);\n    const [test, setTest] = useState({});\n    const [taskForm, setTaskForm] = useState();\n    const [taskFormBoolean, setTaskFormBoolean] = useState(false);\n\n    useEffect(() => {\n        // This will not be hard coded once the log in system is up and running.\n        setProjects(data);\n        loadProjects();\n        formTime();\n        // .catch(err => console.log(err)));\n        // renderProjects();\n    }, []);\n\n    useEffect(() => {\n        formTime();\n\n    }, [taskFormBoolean]);\n\n\n    function findProject(e, item) {\n        const foundProject = projects.filter(project => item === project.projectName)\n        setCurrentProject(foundProject)\n        console.log(user.userName)\n        console.log(currentProject.userName)\n    }\n    // sets the project name list when the projects changes\n    useEffect(() => {\n        const NameList = projects.map(item => {\n            return (\n                item.projectName\n            )\n        });\n        setUser({ userName: \"playerthomasm6@gmail.com\" })\n        setProjectNameList([...new Set(NameList)]);\n    }, [projects])\n\n    const data = [\n        {\n            userName: \"playerthomasm6@gmail.com\",\n            projectName: \"Flash Grid\",\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\n            taskName: \"Assign tasks\",\n            taskDescription: \"Assign tasks to each team member\",\n            taskAssigne: \"Thomas\",\n            taskDueDate: \"02/11/2021\",\n            taskComplete: false\n        },\n        {\n            userName: \"playerthomasm6@gmail.com\",\n            projectName: \"Flash Grid\",\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\n            taskName: \"Create project page\",\n            taskDescription: \"write code to render information on the project page\",\n            taskAssigne: \"Thomas\",\n            taskDueDate: \"02/28/2021\",\n            taskComplete: false\n        },\n        {\n            userName: \"playerthomasm6@gmail.com\",\n            projectName: \"Flash Grid\",\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\n            taskName: \"Project Page CSS\",\n            taskDescription: \"Utilize CSS to format the project page\",\n            taskAssigne: \"John\",\n            taskDueDate: \"02/28/2021\",\n            taskComplete: false\n        },\n        {\n            userName: \"playerthomasm6@gmail.com\",\n            projectName: \"Flash Grid\",\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\n            taskName: \"Assign tasks\",\n            taskDescription: \"Assign tasks to each team member\",\n            taskAssigne: \"Thomas\",\n            taskDueDate: \"02/11/2021\",\n            taskComplete: false\n        },\n        {\n            userName: \"mathewHarris@gmail.com\",\n            projectName: \"Radical Gamez\",\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\n            taskName: \"Assign tasks\",\n            taskDescription: \"Assign tasks to each team member\",\n            taskAssigne: \"Thomas\",\n            taskDueDate: \"02/11/2021\",\n            taskComplete: false\n        },\n        {\n            userName: \"playerthomasm6@gmail.com\",\n            projectName: \"Tipster\",\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\n            taskName: \"Assign tasks\",\n            taskDescription: \"Assign tasks to each team member\",\n            taskAssigne: \"Thomas\",\n            taskDueDate: \"02/11/2021\",\n            taskComplete: false\n        },\n        {\n            userName: \"playerthomasm6@gmail.com\",\n            projectName: \"Tipster\",\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\n            taskName: \"Assign tasks\",\n            taskDescription: \"Assign tasks to each team member\",\n            taskAssigne: \"Thomas\",\n            taskDueDate: \"02/11/2021\",\n            taskComplete: false\n        },\n        {\n            userName: \"playerthomasm6@gmail.com\",\n            projectName: \"Other Project\",\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\n            taskName: \"Assign tasks\",\n            taskDescription: \"Assign tasks to each team member\",\n            taskAssigne: \"Thomas\",\n            taskDueDate: \"02/11/2021\",\n            taskComplete: false\n        },\n        {\n            userName: \"playerthomasm6@gmail.com\",\n            projectName: \"Final Project\",\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\n            taskName: \"Assign tasks\",\n            taskDescription: \"Assign tasks to each team member\",\n            taskAssigne: \"Thomas\",\n            taskDueDate: \"02/11/2021\",\n            taskComplete: false\n        },\n    ];\n\n    const loadProjects = () => {\n        API.getProjects()\n            .then(res =>\n                setProjects(res.data));\n    }\n\n\n    // function handleInputChange(event) {\n    //     const { name, value } = event.target;\n    //     setFormObject({...formObject, [name]: value})\n    //   };\n\n\n    // DELETE TASK\n    // ==========================\n    function deleteThatTask(id) {\n        console.log(id);\n        API.deleteTask(id)\n            .then(res => loadProjects())\n            .catch(err => console.log(err));\n    }\n\n    \n\n    // CREATE TASK\n    // ==========================\n     function createNewTask() {\n                                console.log(currentProject)\n         const task= {\n                                userName: \"playerthomasm6@gmail.com\",\n            projectName: \"Flash Grid\",\n            projectDescription: \"Flash Grid is a project management web app to help organize tasks and personel\",\n            taskName: \"Make Table\",\n            taskDescription: \"Make A table\",\n            taskAssigne: \"Mathew\",\n            taskDueDate: \"02/28/2021\",\n            taskComplete: false\n         }\n         API.saveTask(task)\n         .then(res => loadProjects())\n            .catch(err => console.log(err));\n     }\n\n    function handleNow(event) {\n        const value = event.target.getAttribute(\"value\");\n        const name = event.target.getAttribute(\"name\");\n\n        console.log(value + name)\n        setCurrentProject({currentProject: value });\n        console.log(currentProject)\n    }\n\n    const loadTaskForm = () => {\n        console.log(\"it worked\")\n       setTaskFormBoolean(true)\n    }\n\n    const formTime = () => {\n    if (taskFormBoolean) {\n        setTaskForm(<RenderForm/>)\n    } else {\n        setTaskForm(<TaskFormButton\n       loadTaskForm ={() => loadTaskForm()}\n        />)\n    }\n}\n\n\n\n    return (\n        <div className=\"container-fluid space-out\">\n                                <h6>Current User: {user.userName}</h6>\n\n                                <div className=\"row\">\n\n\n                                </div>\n\n                                <div className=\"row\">\n\n                                    <div className=\"col-sm-2\">\n                                        <table className=\"table striped bordered hover\">\n                                            <thead>\n                                                <tr>\n                                                    <th>Projects</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {projectNameList.map(item => (\n                                                    <tr>\n                                                        <td className=\"pointer\"\n                                                            key={item}\n                                                            value={item}\n                                                            name={item.userName}\n                                                            onClick={(event) => findProject(event, item)}\n                                                        >{item}</td>\n                                                    </tr>\n                                                ))}\n\n                                            </tbody>\n\n\n                                        </table>\n                                    </div>\n\n\n                                    <div className=\"col-sm-10\">\n                                        <table class=\"table striped bordered hover\">\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col\">Tasks</th>\n                                                    <th scope=\"col\">Description</th>\n                                                    <th scope=\"col\">Assigned Personel</th>\n                                                    <th scope=\"col\">Due Date</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n\n                                                {currentProject.map(item => (\n                                                    <tr>\n                                                        <td\n                                                            key={item._id}\n                                                            id={item._id}\n                                                            name=\"taskName\" >\n                                                            {item.taskName}\n                                                            <button\n                                                                value={item._id}\n                                                                onClick={(e) => deleteThatTask(e.target.value)}>X</button>\n\n                                                        </td>\n\n                                                        <td key={item.taskDescription}> {item.taskDescription}</td>\n\n                                                        <td key={item.taskAssigne}>{item.taskAssigne}</td>\n\n                                                        <td key={item.taskDueDate}>{item.taskDueDate}</td>\n\n                                                    </tr>\n                                                ))}\n                                                <tr>\n                                                    <td>\n                                                        <button\n                                                            onClick={() => createNewTask()}\n                                                        >Create New Task for</button>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                                    <div>\n                                                    {taskForm}\n                                                    </div>\n                                            \n                                    </div>\n\n\n\n\n                                </div>\n\n                            </div>\n\n    );\n}\n\nexport default ProjectsContainer;","/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/utils/API.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Column/index.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/Sidebar/index.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/RenderForm/index.js",[],"/Users/hishamkader/Desktop/rutgers/homework/flashGrid/client/src/components/TaskFormButton/index.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":10,"column":21,"nodeType":"121","endLine":10,"endColumn":32},{"ruleId":"122","severity":1,"message":"123","line":10,"column":32,"nodeType":"121","endLine":10,"endColumn":68},{"ruleId":"122","severity":1,"message":"123","line":8,"column":7,"nodeType":"121","endLine":8,"endColumn":32},{"ruleId":"122","severity":1,"message":"123","line":11,"column":1,"nodeType":"121","endLine":11,"endColumn":42},{"ruleId":"115","severity":1,"message":"124","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":14},{"ruleId":"115","severity":1,"message":"125","line":14,"column":12,"nodeType":"117","messageId":"118","endLine":14,"endColumn":16},{"ruleId":"115","severity":1,"message":"126","line":14,"column":18,"nodeType":"117","messageId":"118","endLine":14,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":25,"column":8,"nodeType":"129","endLine":25,"endColumn":10,"suggestions":"130"},{"ruleId":"127","severity":1,"message":"131","line":30,"column":8,"nodeType":"129","endLine":30,"endColumn":25,"suggestions":"132"},{"ruleId":"115","severity":1,"message":"133","line":186,"column":14,"nodeType":"117","messageId":"118","endLine":186,"endColumn":23},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'SignIn' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Column' is defined but never used.","'test' is assigned a value but never used.","'setTest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'formTime'. Either include them or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has a missing dependency: 'formTime'. Either include it or remove the dependency array.",["137"],"'handleNow' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [data, formTime]",{"range":"142","text":"143"},"Update the dependencies array to be: [formTime, taskFormBoolean]",{"range":"144","text":"145"},[892,894],"[data, formTime]",[948,965],"[formTime, taskFormBoolean]"]