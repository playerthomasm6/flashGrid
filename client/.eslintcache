[{"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/index.js":"1","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/reportWebVitals.js":"2","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/App.js":"3","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/home.js":"4","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/myProjects.js":"5","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/about.js":"6","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/register.js":"7","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/login.js":"8","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Navbar/index.js":"9","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Jumbotron/index.js":"10","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Wrapper/index.js":"11","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Register/SignUp.js":"12","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Login/SignIn.js":"13","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/HelloFlashGrid/index.js":"14","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/ProjectsContainer/index.js":"15","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/utils/firebase.js":"16","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/utils/API.js":"17","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Sidebar/index.js":"18","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Column/index.js":"19","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/RenderForm/index.js":"20","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Modal/index.js":"21","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/TaskFormButton/index.js":"22","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/ProjectForm/index.js":"23"},{"size":547,"mtime":1613699149558,"results":"24","hashOfConfig":"25"},{"size":385,"mtime":1613699149561,"results":"26","hashOfConfig":"25"},{"size":862,"mtime":1614552524287,"results":"27","hashOfConfig":"25"},{"size":337,"mtime":1613699331759,"results":"28","hashOfConfig":"25"},{"size":523,"mtime":1614450286083,"results":"29","hashOfConfig":"25"},{"size":350,"mtime":1613699331759,"results":"30","hashOfConfig":"25"},{"size":202,"mtime":1614552419621,"results":"31","hashOfConfig":"25"},{"size":251,"mtime":1614551466723,"results":"32","hashOfConfig":"25"},{"size":1264,"mtime":1614634138740,"results":"33","hashOfConfig":"25"},{"size":345,"mtime":1614634021124,"results":"34","hashOfConfig":"25"},{"size":1177,"mtime":1613699331756,"results":"35","hashOfConfig":"25"},{"size":3177,"mtime":1614614088791,"results":"36","hashOfConfig":"25"},{"size":2960,"mtime":1614646793450,"results":"37","hashOfConfig":"25"},{"size":747,"mtime":1613699149556,"results":"38","hashOfConfig":"25"},{"size":14612,"mtime":1614646793452,"results":"39","hashOfConfig":"25"},{"size":1371,"mtime":1614613129321,"results":"40","hashOfConfig":"25"},{"size":634,"mtime":1614450286083,"results":"41","hashOfConfig":"25"},{"size":598,"mtime":1613699331756,"results":"42","hashOfConfig":"25"},{"size":388,"mtime":1614450286075,"results":"43","hashOfConfig":"25"},{"size":2170,"mtime":1614450286081,"results":"44","hashOfConfig":"25"},{"size":2119,"mtime":1614450286078,"results":"45","hashOfConfig":"25"},{"size":236,"mtime":1614450286082,"results":"46","hashOfConfig":"25"},{"size":1360,"mtime":1614634021127,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8ygfeh",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/reportWebVitals.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/App.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/home.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/myProjects.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/about.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/register.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/pages/login.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Navbar/index.js",["97","98"],"import React from \"react\";\nimport \"./styles.css\";\n\n\nfunction Nav() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark nav-color\">\n            <div className=\"container\">\n                <a href=\"\"><img src=\"flashgrid-logo-white.png\"></img></a>\n                <div className=\"col\">\n                    <a className=\"navbar-brand\" href=\"/\">\n                        Home\n                    </a>\n                </div>\n                <div className=\"col\">\n                    <a className=\"navbar-brand\" href=\"/about\">\n                        about\n                    </a>\n                </div>\n                <div className=\"col\">\n                    <a className=\"navbar-brand\" href=\"/projects\">\n                        My Projects\n                    </a>\n                </div>\n                <div className=\"col\">\n                    <a className=\"navbar-brand\" href=\"/login\">\n                        Log In\n                    </a>\n                </div>\n                <div className=\"col\">\n                    <a className=\"navbar-brand\" href=\"/register\">\n                        Sign In\n                    </a>\n                </div>\n            </div>\n                \n\n         \n        </nav>\n    );\n}\n\nexport default Nav;\n","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Jumbotron/index.js",["99","100"],"import React from \"react\";\nimport \"./styles.css\";\n\nfunction Jumbotron() {\n  return (<div>\n    <div className=\"jumbotron b\">\n      <h1> Welcome to</h1>\n      <img src=\"flashgrid.png\"></img>\n      <h4>where projects are made in a flash</h4>\n    </div>\n<img src=\"digital-marketing-meeting.jpg\"></img>\n  </div>\n  \n\n  );\n}\n\nexport default Jumbotron;\n","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Wrapper/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Register/SignUp.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Login/SignIn.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/HelloFlashGrid/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/ProjectsContainer/index.js",["101","102"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport Column from \"../Column\";\nimport API from \"../../utils/API\";\nimport ModalForm from \"../Modal\";\nimport RenderForm from \"../RenderForm\";\nimport TaskFormButton from \"../TaskFormButton\";\nimport ProjectForm from \"../ProjectForm\";\n\n\nfunction ProjectsContainer(props) {\n  const [user, setUser] = useState({})\n  const [projectNameList, setProjectNameList] = useState([]);\n  const [projects, setProjects] = useState([]); // SETS PROJECTS AFTER FILTER BY USERNAME\n  const [userProjects, setUserProjects] = useState([]); // SETS PROJECT LIST PRIOR TO FILTER FROM USER PROJECTS\n  const [currentProject, setCurrentProject] = useState([]);\n  const [taskForm, setTaskForm] = useState();\n  const [taskFormBoolean, setTaskFormBoolean] = useState(false); // USE TO DECIDE TO RENDER THE FORM OR BUTTON\n  const [clickedProject, setClickedProject] = useState(false); // USE TO DECIDE TO RENDER THE FORM OR BUTTON\n  const [formState, setFormState] = useState({}); // USE TO COLLECT TASK FORM INPUT VALUES\n  const [projectForm, setProjectForm] = useState({}) // USE TO COLLECT PROJECT FORM INPUT VALUES\n  const [active, setActive] = useState(false) //USE FOR SETTING ACTIVE CLASS\n\n  const signedInUser = localStorage.getItem('signedInUser')\n\n  useEffect(() => {\n\n    loadProjects(); // ON LOAD OF PAGE API CALL TO GET ALL PROJECTS WILL BE CALLED\n    console.log(\"The user \" + signedInUser + \" is loggined in...\")\n  }, []);\n\n  useEffect(() => {\n\n    filterProjectsUserName(); // IF userProjects IS CHANGED \n\n  }, [userProjects]);\n\n  // sets the project name list when the projects changes\n  useEffect(() => {\n    const NameList = projects.map(item => {\n      return (\n        item.projectName\n      )\n    });\n    setUser({ userName: signedInUser })\n    setProjectNameList([...new Set(NameList)]);\n  }, [projects])\n  \n  \n  const loadProjects = () => { // LOADS ALL PROJECTS FROM THE API\n    API.getProjects().then(res => setUserProjects(res.data));\n  };\n\n  const filterProjectsUserName = () => {\n    console.log(user.userName)\n    const filteredUserProjects = userProjects.filter(project => user.userName === project.userName)\n    setProjects(filteredUserProjects)\n  }\n\n  \n  function findProject(e, item) { // FILTERS ALL TASKS WITH THE CLICK ON PROJECT NAME\n    setTaskFormBoolean(false)\n    setClickedProject(true);\n    const foundProject = projects.filter(project => item === project.projectName)\n    setCurrentProject(foundProject)\n\n  }\n\n  \n\n  const data = [\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Create project page\",\n      taskDescription: \"write code to render information on the project page\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/28/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Project Page CSS\",\n      taskDescription: \"Utilize CSS to format the project page\",\n      taskAssigne: \"John\",\n      taskDueDate: \"02/28/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Flash Grid\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"mathewHarris@gmail.com\",\n      projectName: \"Radical Gamez\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Tipster\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Tipster\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Other Project\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    },\n    {\n      userName: \"playerthomasm6@gmail.com\",\n      projectName: \"Final Project\",\n      projectDescription:\n        \"Flash Grid is a project management web app to help organize tasks and personel\",\n      taskName: \"Assign tasks\",\n      taskDescription: \"Assign tasks to each team member\",\n      taskAssigne: \"Thomas\",\n      taskDueDate: \"02/11/2021\",\n      taskComplete: false\n    }\n  ];\n\n  \n\n  // function handleInputChange(event) {\n  //     const { name, value } = event.target;\n  //     setFormObject({...formObject, [name]: value})\n  //   };\n\n\n\n  // =============================================================================================================\n  // |         CRUD FUNCTIONS        |      DELETE      |     CREATE      |     EDIT      |\n  // =============================================================================================================\n\n  function deleteThatTask(id) { // DELETE TASK BY ID\n    console.log(id);\n    API.deleteTask(id)\n      .then(res => {\n        console.log('fire1')\n        loadProjects()\n      })\n      .then(() => {\n        console.log('fire2')\n        console.log(currentProject[0].projectName)\n        findProject(\"bullshit\", currentProject[0].projectName)\n      })\n      .then(() => {\n        const newTasks = currentProject.filter((task) => task._id !== id);\n        setCurrentProject(newTasks);\n      })\n      .catch(err => console.log(err));\n  }\n\n  function handleFormInput(event) { // HANDLES TASK FORM INPUTS\n    const { name, value } = event.target\n\n    setFormState({ ...formState, [name]: value })\n  }\n\n  const submitNewTask = (e) => { // CREATE NEW TASK\n    e.preventDefault();\n    console.log(\"New Task Created\");\n\n    console.log(formState)\n\n    const task = {\n      userName: currentProject[0].userName,\n      projectName: currentProject[0].projectName,\n      projectDescription: currentProject[0].projectDescription,\n      taskName: formState.taskName,\n      taskDescription: formState.taskDescription,\n      taskAssigne: formState.taskAssigne,\n      taskDueDate: formState.taskDueDate,\n      taskComplete: false\n    }\n    API.saveTask(task)\n      .then(res => loadProjects())\n      .then(() => {setCurrentProject([...currentProject, task]);})\n      .then(() => setTaskFormBoolean(false))\n      .then(() => setFormState({}))\n      .catch(err => console.log(err));\n  }\n\n\n  function handleProjectFormInput(event) { // HANDLES TASK FORM INPUTS\n    const { name, value } = event.target\n\n    setProjectForm({ ...projectForm, [name]: value })\n    console.log(projectForm)\n  }\n\n\n  const createNewProject = () => { // CREATE NEW PROJECT\n    console.log(\"Project Created!!... unless it wasn't?  No?  Ok I will look into it\");\n    const newProject = {\n      // userName: user.userName,\n      userName: user.userName,\n      projectName: projectForm.projectName,\n      projectDescription: projectForm.projectDescription,\n      taskName: \"Create tasks for your new project!\",\n      taskDescription: \"Describe your tasks!\",\n      taskAssigne: \"Assign someone the task\",\n      taskDueDate: \"2021-05-15T04:00:00.000Z\",\n      taskComplete: false\n    }\n    API.saveTask(newProject)\n      .then(res => loadProjects())\n      // .then(() => {setCurrentProject([...currentProject, newProject]);})\n      .then(() => setTaskFormBoolean(false))\n      .then(() => setFormState({}))\n      .catch(err => console.log(err));\n\n  }\n\n// ==================================================================================================================\n\n\n\n\n  function handleNow(event) {\n    const value = event.target.getAttribute(\"value\");\n    const name = event.target.getAttribute(\"name\");\n\n    console.log(value + name);\n    setCurrentProject({ currentProject: value });\n    console.log(currentProject);\n  }\n\n  const [show, setShow] = useState(false);\n  const [editData, setEditData] = useState({});\n  const handleClose = () => setShow(false);\n  const handleEditBtn = eData => {\n    setShow(true);\n    setEditData(eData);\n  };\n\n  const loadTaskForm = () => {\n    console.log(\"it worked\")\n    setTaskFormBoolean(true)\n  }\n\n  \n\n  function handleFormInput(event) {\n    const { name, value } = event.target\n\n    setFormState({ ...formState, [name]: value })\n  }\n\n\n  \n  const getForm = () => { // checks for boolean state and renders either form or button which changes the boolean state to render the form\n    \n    if ((taskFormBoolean) && (clickedProject)) {\n      return <RenderForm\n        formState={formState}\n        submitNewTask={(e) => submitNewTask(e)}\n        handleFormInput={(e) => handleFormInput(e)}\n      />\n    } else if ((!taskFormBoolean) && (clickedProject)) {\n      return <TaskFormButton\n        loadTaskForm={() => loadTaskForm()}\n      />\n    }\n  }\n\n  const getProjectForm = () => { // checks for boolean state and renders either form or button which changes the boolean state to render the form\n    if (!taskFormBoolean) {\n      return <ProjectForm\n        projectForm={projectForm}\n        createNewProject={(e) => createNewProject(e)}\n        handleProjectFormInput={(e) => handleProjectFormInput(e)}\n      />\n    } else {\n      return <TaskFormButton\n        loadTaskForm={() => loadTaskForm()}\n      />\n    }\n  }\n\n  const makeActive = (item) => {\n    if(item === item) {\n      return \"active pointer\"\n    } else {\n      return \"pointer\"\n    }\n  }\n\n\n\n\n// ===================================================================================================\n// RETURN | RENDER  |\n// ===================================================================================================\n  return ( \n    <>\n      <ModalForm show={show} handleClose={handleClose} editData={editData} />\n      <div className=\"container-fluid space-out\">\n        <h6>Current User: {user.userName}</h6>\n        {/* <button onClick={() => createNewProject()}>Create Project</button> */}\n\n        <div className=\"row\">\n          <div className=\"col-sm-2\">\n          <table class=\"table striped bordered hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\"><h4 className=\"align-center\">Projects</h4></th>\n                </tr>\n              </thead>\n              <tbody>\n\n            {\n            \n            projectNameList.map(item => (\n              <tr>\n              <td\n                className=\"pointer\"\n                key={item + \"1\"}\n                value={item}\n                // name={item.userName}\n                onClick={event => {findProject(event, item)}}\n              > <h5 className=\"align-center\">{item}</h5>\n                \n              </td>\n              \n              </tr>\n            ))}\n                \n            </tbody>\n            </table>\n          </div>\n\n          <div className=\"col-sm-10\">\n            <table class=\"table striped bordered hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\"><h4 className=\"align-center\">Task Name</h4></th>\n                  <th scope=\"col\"><h4 className=\"align-center\">Description</h4></th>\n                  <th scope=\"col\"><h4 className=\"align-center\">Assigned Personel</h4></th>\n                  <th scope=\"col\"><h4 className=\"align-center\">Due Date</h4></th>\n                  <th scope=\"col\"><h4 className=\"align-center\">Manage</h4></th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentProject.map(item => (\n                  <tr\n                  key={item._id}\n                  >\n                    <td \n                    id={item._id} \n                    name=\"taskName\">\n                      <h6 className=\"align-center\">{item.taskName}</h6>\n                      \n                    </td>\n\n                    <td> \n                      <p className=\"align-center\">\n                      {item.taskDescription}\n                      </p>\n                    </td>\n\n                    <td><h6 className=\"align-center\">{item.taskAssigne}</h6></td>\n\n                    <td>\n                      <h6 className=\"align-center\">{item.taskDueDate}</h6>{\" \"}\n                      \n                    </td>\n\n                    <td>\n                      <div className=\"align-center\">\n                    <button onClick={() => handleEditBtn(item)}>Edit</button>\n                    <button className=\"delete-button align-center\" value={item._id} onClick={e => deleteThatTask(e.target.value)}>[X]</button>\n                    </div>\n                    </td>\n                  </tr>\n                ))}\n\n                \n              </tbody>\n            </table>\n            <div className=\"row\">\n              <div className=\"col-sm-12\">{getForm()}</div>\n              \n              </div>\n          </div>\n        </div>\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n              \n              {getProjectForm()}\n              </div>\n            </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProjectsContainer;\n","/Users/matthewharris/Documents/GitHub/flashGrid/client/src/utils/firebase.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/utils/API.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Sidebar/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Column/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/RenderForm/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/Modal/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/TaskFormButton/index.js",[],"/Users/matthewharris/Documents/GitHub/flashGrid/client/src/components/ProjectForm/index.js",[],{"ruleId":"103","severity":1,"message":"104","line":9,"column":17,"nodeType":"105","endLine":9,"endColumn":28},{"ruleId":"106","severity":1,"message":"107","line":9,"column":28,"nodeType":"105","endLine":9,"endColumn":64},{"ruleId":"106","severity":1,"message":"107","line":8,"column":7,"nodeType":"105","endLine":8,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":11,"column":1,"nodeType":"105","endLine":11,"endColumn":42},{"ruleId":"108","severity":1,"message":"109","line":297,"column":12,"nodeType":"110","messageId":"111","endLine":297,"endColumn":27},{"ruleId":"112","severity":1,"message":"113","line":335,"column":8,"nodeType":"114","messageId":"115","endLine":335,"endColumn":21},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-redeclare","'handleFormInput' is already defined.","Identifier","redeclared","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf"]