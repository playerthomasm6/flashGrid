{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\GitHub\\\\flashGrid\\\\client\\\\src\\\\pages\\\\home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport API from \"../utils/API\";\nimport Nav from \"../components/Navbar\";\nimport HelloFlashGrid from \"../components/HelloFlashGrid\";\n\nfunction Home() {\n  _s();\n\n  // Setting our component's initial state\n  const [books, setBooks] = useState([]);\n  const [formObject, setFormObject] = useState({}); // Load all books and store them with setBooks\n\n  useEffect(() => {\n    loadBooks();\n  }, []); // Loads all books and sets them to books\n\n  function loadBooks() {\n    API.getBooks().then(res => setBooks(res.data)).catch(err => console.log(err));\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(res => loadBooks()).catch(err => console.log(err));\n  } // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormObject({ ...formObject,\n      [name]: value\n    });\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title && formObject.author) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis\n      }).then(res => loadBooks()).catch(err => console.log(err));\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HelloFlashGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"UqfM0h0i9og713UvocqePx2+GPk=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/thoma/Documents/GitHub/flashGrid/client/src/pages/home.js"],"names":["React","useState","useEffect","API","Nav","HelloFlashGrid","Home","books","setBooks","formObject","setFormObject","loadBooks","getBooks","then","res","data","catch","err","console","log","deleteBook","id","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","title","author","saveBook","synopsis"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C,CAHY,CAKZ;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT,CANY,CAUZ;;AACA,WAASA,SAAT,GAAqB;AACjBR,IAAAA,GAAG,CAACS,QAAJ,GACKC,IADL,CACUC,GAAG,IACLN,QAAQ,CAACM,GAAG,CAACC,IAAL,CAFhB,EAIKC,KAJL,CAIWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;AAKH;;AAAA,GAjBW,CAmBZ;;AACA,WAASG,UAAT,CAAoBC,EAApB,EAAwB;AACpBlB,IAAAA,GAAG,CAACiB,UAAJ,CAAeC,EAAf,EACKR,IADL,CACUC,GAAG,IAAIH,SAAS,EAD1B,EAEKK,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGH,GAxBW,CA0BZ;;;AACA,WAASK,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAhB,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiB,OAACe,IAAD,GAAQC;AAAzB,KAAD,CAAb;AACH;;AAAA,GA9BW,CAgCZ;AACA;;AACA,WAASE,gBAAT,CAA0BJ,KAA1B,EAAiC;AAC7BA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAInB,UAAU,CAACoB,KAAX,IAAoBpB,UAAU,CAACqB,MAAnC,EAA2C;AACvC3B,MAAAA,GAAG,CAAC4B,QAAJ,CAAa;AACTF,QAAAA,KAAK,EAAEpB,UAAU,CAACoB,KADT;AAETC,QAAAA,MAAM,EAAErB,UAAU,CAACqB,MAFV;AAGTE,QAAAA,QAAQ,EAAEvB,UAAU,CAACuB;AAHZ,OAAb,EAKKnB,IALL,CAKUC,GAAG,IAAIH,SAAS,EAL1B,EAMKK,KANL,CAMWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOH;AACJ;;AAAA;AAED,sBACI;AAAA,4BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAtDQX,I;;KAAAA,I;AAyDT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Nav from \"../components/Navbar\";\r\nimport HelloFlashGrid from \"../components/HelloFlashGrid\";\r\n\r\nfunction Home() {\r\n    // Setting our component's initial state\r\n    const [books, setBooks] = useState([])\r\n    const [formObject, setFormObject] = useState({})\r\n\r\n    // Load all books and store them with setBooks\r\n    useEffect(() => {\r\n        loadBooks()\r\n    }, [])\r\n\r\n    // Loads all books and sets them to books\r\n    function loadBooks() {\r\n        API.getBooks()\r\n            .then(res =>\r\n                setBooks(res.data)\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    // Deletes a book from the database with a given id, then reloads books from the db\r\n    function deleteBook(id) {\r\n        API.deleteBook(id)\r\n            .then(res => loadBooks())\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    // Handles updating component state when the user types into the input field\r\n    function handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        setFormObject({ ...formObject, [name]: value })\r\n    };\r\n\r\n    // When the form is submitted, use the API.saveBook method to save the book data\r\n    // Then reload books from the database\r\n    function handleFormSubmit(event) {\r\n        event.preventDefault();\r\n        if (formObject.title && formObject.author) {\r\n            API.saveBook({\r\n                title: formObject.title,\r\n                author: formObject.author,\r\n                synopsis: formObject.synopsis\r\n            })\r\n                .then(res => loadBooks())\r\n                .catch(err => console.log(err));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <HelloFlashGrid />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}